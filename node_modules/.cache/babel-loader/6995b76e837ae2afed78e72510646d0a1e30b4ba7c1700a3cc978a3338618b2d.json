{"ast":null,"code":"/**\n * Enhanced Machine Learning Trading Engine\n * Advanced AI-powered trading strategies with technical analysis and flow integration\n */import technicalAnalysis from'./technicalAnalysis.js';import flowAnalysis from'./flowAnalysis.js';class EnhancedMLEngine{constructor(){this.strategies={momentum:{weight:0.25,performance:0.68,parameters:{rsiThreshold:70,macdSignal:true,volumeMultiplier:1.5}},meanReversion:{weight:0.20,performance:0.62,parameters:{rsiOversold:30,rsiOverbought:70,bollingerPosition:0.1}},breakout:{weight:0.20,performance:0.75,parameters:{atrMultiplier:2.0,volumeThreshold:2.0,adxStrength:25}},flowBased:{weight:0.15,performance:0.72,parameters:{whaleThreshold:50000,sentimentScore:60,callPutRatio:1.2}},scalping:{weight:0.10,performance:0.58,parameters:{quickRsi:14,fastEma:9,slowEma:21}},swing:{weight:0.10,performance:0.71,parameters:{sma20:true,sma50:true,supportResistance:true}}};this.features=['price','volume','change','rsi','macd','volatility','trend','momentum','support','resistance','bollinger','adx','stochastic','williamsR','atr','vwap','obv','flowSentiment','whaleActivity','gammaExposure'];this.learning={totalTrades:0,successfulTrades:0,strategyPerformance:{},adaptiveWeights:true,confidenceThreshold:65};}// ==================== ENHANCED RECOMMENDATION ENGINE ====================\n/**\n     * Generate enhanced AI recommendations using technical analysis and flow data\n     */async generateEnhancedRecommendations(marketData){let optionsFlowData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const recommendations=[];for(const[symbol,stockData]of Object.entries(marketData)){try{// Perform comprehensive technical analysis\nconst technicalData=technicalAnalysis.performCompleteAnalysis(stockData);// Analyze options flow if available\nlet flowData=null;if(optionsFlowData&&optionsFlowData.length>0){const symbolFlow=optionsFlowData.filter(flow=>(flow.symbol||flow.ticker||'').toUpperCase()===symbol.toUpperCase());flowData=flowAnalysis.analyzeFlowPatterns(symbolFlow);}// Extract enhanced features\nconst features=this.extractEnhancedFeatures(stockData,technicalData,flowData);// Generate analysis using multiple strategies\nconst analysis=this.performEnhancedAnalysis(features,technicalData,flowData);if(analysis.confidence>=this.learning.confidenceThreshold){const recommendation={symbol,action:analysis.action,confidence:analysis.confidence,strategy:analysis.primaryStrategy,entryPrice:stockData.price,targetPrice:this.calculateEnhancedTarget(stockData.price,analysis),stopLoss:this.calculateEnhancedStopLoss(stockData.price,analysis),reasoning:analysis.reasoning,riskReward:analysis.riskReward,timeframe:analysis.timeframe,technicalSignals:this.summarizeTechnicalSignals(technicalData),flowSignals:flowData?this.summarizeFlowSignals(flowData):null,probability:this.calculateSuccessProbability(analysis),positionSize:this.calculatePositionSize(analysis),timestamp:Date.now(),// Enhanced data\ntechnicalScore:analysis.technicalScore,flowScore:flowData?flowData.overallSignal.score:0,volatilityScore:features.volatilityScore,momentumScore:features.momentumScore,supportLevel:features.supportLevel,resistanceLevel:features.resistanceLevel};recommendations.push(recommendation);}}catch(error){console.error(\"Error analyzing \".concat(symbol,\":\"),error);}}// Sort by confidence and return top recommendations\nreturn recommendations.sort((a,b)=>b.confidence-a.confidence).slice(0,10);}/**\n     * Extract enhanced features combining technical and flow data\n     */extractEnhancedFeatures(stockData,technicalData,flowData){const prices=this.generatePriceHistory(stockData.price);const features={// Basic features\nprice:stockData.price,volume:stockData.volume/1000000,change:stockData.changePercent,// Technical features\nrsi:technicalData.rsi||50,macd:technicalData.macd?technicalData.macd.macd:0,macdSignal:technicalData.macd?technicalData.macd.signal:0,macdHistogram:technicalData.macd?technicalData.macd.histogram:0,// Bollinger Bands\nbollingerPosition:technicalData.bollingerBands?technicalData.bollingerBands.position:50,bollingerBandwidth:technicalData.bollingerBands?technicalData.bollingerBands.bandwidth:20,// Trend indicators\nadx:technicalData.adx?technicalData.adx.adx:20,adxTrend:technicalData.adx?technicalData.adx.trend:'WEAK_TREND',sma20:technicalData.sma20||stockData.price,sma50:technicalData.sma50||stockData.price,ema12:technicalData.ema12||stockData.price,ema26:technicalData.ema26||stockData.price,// Volatility\natr:technicalData.atr||stockData.price*0.02,volatility:this.calculateVolatility(prices),// Volume indicators\nvwap:technicalData.vwap||stockData.price,obv:technicalData.obv||0,// Support/Resistance\nsupportLevel:technicalData.pivotPoints?technicalData.pivotPoints.s1:stockData.low,resistanceLevel:technicalData.pivotPoints?technicalData.pivotPoints.r1:stockData.high,// Flow features (if available)\nflowSentiment:flowData?flowData.sentimentAnalysis.sentimentScore:50,whaleActivity:flowData?flowData.whaleActivity.totalWhalePremium:0,callPutRatio:flowData?flowData.sentimentAnalysis.callPutRatio:1,gammaExposure:flowData?flowData.gamma.netGamma:0,// Derived features\ntrendStrength:this.calculateTrendStrength(technicalData),momentumScore:this.calculateMomentumScore(technicalData),volatilityScore:this.calculateVolatilityScore(technicalData),volumeScore:this.calculateVolumeScore(stockData,technicalData)};return features;}/**\n     * Perform enhanced analysis using multiple strategies\n     */performEnhancedAnalysis(features,technicalData,flowData){const strategyScores={};const strategyReasons={};// Momentum Strategy Analysis\nstrategyScores.momentum=this.analyzeMomentumStrategy(features,technicalData);strategyReasons.momentum=this.getMomentumReasoning(features,technicalData);// Mean Reversion Strategy Analysis\nstrategyScores.meanReversion=this.analyzeMeanReversionStrategy(features,technicalData);strategyReasons.meanReversion=this.getMeanReversionReasoning(features,technicalData);// Breakout Strategy Analysis\nstrategyScores.breakout=this.analyzeBreakoutStrategy(features,technicalData);strategyReasons.breakout=this.getBreakoutReasoning(features,technicalData);// Flow-Based Strategy Analysis\nif(flowData){strategyScores.flowBased=this.analyzeFlowStrategy(features,flowData);strategyReasons.flowBased=this.getFlowReasoning(features,flowData);}// Swing Strategy Analysis\nstrategyScores.swing=this.analyzeSwingStrategy(features,technicalData);strategyReasons.swing=this.getSwingReasoning(features,technicalData);// Calculate weighted final score\nlet finalScore=0;let totalWeight=0;const reasoning=[];Object.keys(strategyScores).forEach(strategy=>{const weight=this.strategies[strategy].weight;const performance=this.strategies[strategy].performance;const adjustedWeight=weight*performance;// Weight by historical performance\nfinalScore+=strategyScores[strategy]*adjustedWeight;totalWeight+=adjustedWeight;if(Math.abs(strategyScores[strategy])>0.3){reasoning.push(\"\".concat(strategy,\": \").concat(strategyReasons[strategy]));}});const normalizedScore=totalWeight>0?finalScore/totalWeight:0;const action=normalizedScore>0.15?'BUY':normalizedScore<-0.15?'SELL':'HOLD';const confidence=Math.min(Math.abs(normalizedScore)*100+50,95);// Determine primary strategy\nconst primaryStrategy=Object.keys(strategyScores).reduce((maxStrategy,strategy)=>Math.abs(strategyScores[strategy])>Math.abs(strategyScores[maxStrategy]||0)?strategy:maxStrategy,'momentum');return{action,confidence:parseFloat(confidence.toFixed(1)),primaryStrategy,reasoning:reasoning.join(' | '),riskReward:this.calculateRiskReward(normalizedScore,features),timeframe:this.selectTimeframe(features,primaryStrategy),technicalScore:normalizedScore,strategyScores,overallTechnicalSignal:technicalData.overallSignal};}// ==================== STRATEGY ANALYZERS ====================\n/**\n     * Analyze momentum strategy\n     */analyzeMomentumStrategy(features,technicalData){let score=0;// RSI momentum\nif(features.rsi>60&&features.rsi<80)score+=0.3;else if(features.rsi<40&&features.rsi>20)score-=0.3;// MACD momentum\nif(features.macdHistogram>0&&features.macd>features.macdSignal)score+=0.25;else if(features.macdHistogram<0&&features.macd<features.macdSignal)score-=0.25;// Price vs moving averages\nif(features.price>features.ema12&&features.ema12>features.ema26)score+=0.2;else if(features.price<features.ema12&&features.ema12<features.ema26)score-=0.2;// Volume confirmation\nif(features.volumeScore>1.2)score+=0.15;// ADX trend strength\nif(features.adxTrend==='STRONG_UPTREND')score+=0.1;else if(features.adxTrend==='STRONG_DOWNTREND')score-=0.1;return Math.max(-1,Math.min(1,score));}/**\n     * Analyze mean reversion strategy\n     */analyzeMeanReversionStrategy(features,technicalData){let score=0;// RSI extremes\nif(features.rsi<30)score+=0.4;else if(features.rsi>70)score-=0.4;// Bollinger Bands position\nif(features.bollingerPosition<20)score+=0.3;else if(features.bollingerPosition>80)score-=0.3;// Williams %R extremes\nconst williamsR=technicalData.williamsR;if(williamsR&&williamsR<-80)score+=0.2;else if(williamsR&&williamsR>-20)score-=0.2;// Stochastic oversold/overbought\nif(technicalData.stochastic){if(technicalData.stochastic.k<20)score+=0.1;else if(technicalData.stochastic.k>80)score-=0.1;}return Math.max(-1,Math.min(1,score));}/**\n     * Analyze breakout strategy\n     */analyzeBreakoutStrategy(features,technicalData){let score=0;// Price breakout above resistance\nif(features.price>features.resistanceLevel*1.02)score+=0.4;else if(features.price<features.supportLevel*0.98)score-=0.4;// Volume confirmation\nif(features.volumeScore>1.5)score+=0.3;// ATR expansion (volatility increase)\nif(features.volatilityScore>1.2)score+=0.2;// Bollinger band squeeze release\nif(features.bollingerBandwidth<15&&features.bollingerPosition>60)score+=0.1;else if(features.bollingerBandwidth<15&&features.bollingerPosition<40)score-=0.1;return Math.max(-1,Math.min(1,score));}/**\n     * Analyze flow-based strategy\n     */analyzeFlowStrategy(features,flowData){let score=0;// Whale activity\nif(flowData.whaleActivity.totalWhalePremium>100000){if(flowData.whaleActivity.whaleCallPutRatio>1.5)score+=0.4;else if(flowData.whaleActivity.whaleCallPutRatio<0.7)score-=0.4;}// Overall sentiment\nif(flowData.sentimentAnalysis.sentimentScore>70)score+=0.3;else if(flowData.sentimentAnalysis.sentimentScore<30)score-=0.3;// Unusual activity\nif(flowData.unusualActivity.length>0){const significance=flowData.unusualActivity.reduce((max,activity)=>activity.significance==='HIGH'?Math.max(max,0.2):activity.significance==='MEDIUM'?Math.max(max,0.1):max,0);score+=flowData.overallSignal.score>0?significance:-significance;}return Math.max(-1,Math.min(1,score));}/**\n     * Analyze swing strategy\n     */analyzeSwingStrategy(features,technicalData){let score=0;// Price position relative to moving averages\nif(features.price>features.sma20&&features.sma20>features.sma50)score+=0.3;else if(features.price<features.sma20&&features.sma20<features.sma50)score-=0.3;// Support/resistance levels\nconst distanceFromSupport=(features.price-features.supportLevel)/features.price;const distanceFromResistance=(features.resistanceLevel-features.price)/features.price;if(distanceFromSupport<0.02&&distanceFromSupport>0)score+=0.2;if(distanceFromResistance<0.02&&distanceFromResistance>0)score-=0.2;// VWAP position\nif(features.price>features.vwap*1.01)score+=0.1;else if(features.price<features.vwap*0.99)score-=0.1;return Math.max(-1,Math.min(1,score));}// ==================== HELPER METHODS ====================\ncalculateTrendStrength(technicalData){let strength=0;if(technicalData.adx&&technicalData.adx.adx>25)strength+=0.3;if(technicalData.macd&&technicalData.macd.crossover==='BULLISH')strength+=0.2;if(technicalData.sma20&&technicalData.sma50&&technicalData.sma20>technicalData.sma50)strength+=0.2;return Math.min(strength,1);}calculateMomentumScore(technicalData){let momentum=0;if(technicalData.rsi>50)momentum+=(technicalData.rsi-50)/50*0.4;else momentum-=(50-technicalData.rsi)/50*0.4;if(technicalData.macd&&technicalData.macd.histogram>0)momentum+=0.3;else if(technicalData.macd&&technicalData.macd.histogram<0)momentum-=0.3;return Math.max(-1,Math.min(1,momentum));}calculateVolatilityScore(technicalData){if(!technicalData.atr||!technicalData.bollingerBands)return 1;// Higher ATR and Bollinger bandwidth = higher volatility\nconst atrScore=Math.min(technicalData.atr/5,2);// Normalize ATR\nconst bbScore=technicalData.bollingerBands.bandwidth/20;// Normalize bandwidth\nreturn(atrScore+bbScore)/2;}calculateVolumeScore(stockData,technicalData){// Compare current volume to average (simplified)\nconst avgVolume=stockData.volume*0.8;// Assume current is 20% above average\nreturn stockData.volume/avgVolume;}calculateEnhancedTarget(price,analysis){const baseMultiplier=analysis.action==='BUY'?1.05:0.95;// Adjust based on volatility and confidence\nconst volatilityAdjustment=analysis.volatilityScore||1;const confidenceAdjustment=analysis.confidence/100;const adjustedMultiplier=analysis.action==='BUY'?1+0.05*volatilityAdjustment*confidenceAdjustment:1-0.05*volatilityAdjustment*confidenceAdjustment;return parseFloat((price*adjustedMultiplier).toFixed(2));}calculateEnhancedStopLoss(price,analysis){const baseMultiplier=analysis.action==='BUY'?0.97:1.03;// Tighter stops for higher confidence trades\nconst confidenceAdjustment=analysis.confidence/100;const stopDistance=0.03*(1-confidenceAdjustment*0.3);const adjustedMultiplier=analysis.action==='BUY'?1-stopDistance:1+stopDistance;return parseFloat((price*adjustedMultiplier).toFixed(2));}calculateRiskReward(score,features){const baseRatio=Math.abs(score)*2+1;const volatilityAdjustment=(features.volatilityScore||1)*0.5;const finalRatio=baseRatio+volatilityAdjustment;return\"1:\".concat(finalRatio.toFixed(1));}calculateSuccessProbability(analysis){// Base probability from confidence\nlet probability=analysis.confidence;// Adjust based on strategy performance\nconst strategyPerf=this.strategies[analysis.primaryStrategy].performance;probability=probability*strategyPerf;return Math.min(95,Math.max(5,Math.round(probability)));}calculatePositionSize(analysis){// Risk-based position sizing (simplified)\nconst baseSize=1000;// Base position size\nconst confidenceMultiplier=analysis.confidence/100;const riskAdjustment=1/(analysis.volatilityScore||1);return Math.round(baseSize*confidenceMultiplier*riskAdjustment);}selectTimeframe(features,strategy){if(strategy==='scalping')return'5-15 minutes';if(strategy==='momentum')return'1-3 hours';if(strategy==='meanReversion')return'2-6 hours';if(strategy==='breakout')return'1-5 days';if(strategy==='swing')return'3-10 days';if(strategy==='flowBased')return'1-2 days';return'1-3 days';}// Reasoning methods\ngetMomentumReasoning(features,technicalData){const reasons=[];if(features.rsi>60)reasons.push('Strong RSI momentum');if(features.macd>features.macdSignal)reasons.push('MACD bullish crossover');if(features.adxTrend.includes('STRONG'))reasons.push('Strong trend detected');return reasons.join(', ')||'Momentum analysis';}getMeanReversionReasoning(features,technicalData){const reasons=[];if(features.rsi<30)reasons.push('RSI oversold');if(features.rsi>70)reasons.push('RSI overbought');if(features.bollingerPosition<20)reasons.push('Below lower Bollinger band');if(features.bollingerPosition>80)reasons.push('Above upper Bollinger band');return reasons.join(', ')||'Mean reversion opportunity';}getBreakoutReasoning(features,technicalData){const reasons=[];if(features.price>features.resistanceLevel)reasons.push('Resistance breakout');if(features.price<features.supportLevel)reasons.push('Support breakdown');if(features.volumeScore>1.5)reasons.push('Volume confirmation');return reasons.join(', ')||'Breakout pattern';}getFlowReasoning(features,flowData){const reasons=[];if(flowData.whaleActivity.totalWhalePremium>100000)reasons.push('Whale activity detected');if(flowData.sentimentAnalysis.sentimentScore>70)reasons.push('Bullish flow sentiment');if(flowData.sentimentAnalysis.sentimentScore<30)reasons.push('Bearish flow sentiment');return reasons.join(', ')||'Options flow analysis';}getSwingReasoning(features,technicalData){const reasons=[];if(features.price>features.sma20)reasons.push('Above SMA20');if(features.price>features.vwap)reasons.push('Above VWAP');return reasons.join(', ')||'Swing trading setup';}summarizeTechnicalSignals(technicalData){return{rsi:technicalData.rsi,macdSignal:technicalData.macd?technicalData.macd.crossover:null,bollingerSignal:technicalData.bollingerBands?technicalData.bollingerBands.signal:null,overallSignal:technicalData.overallSignal?technicalData.overallSignal.signal:null,trendStrength:technicalData.adx?technicalData.adx.trend:null};}summarizeFlowSignals(flowData){return{sentiment:flowData.sentimentAnalysis.sentiment,whaleActivity:flowData.whaleActivity.totalWhaleFlows,callPutRatio:flowData.sentimentAnalysis.callPutRatio,overallSignal:flowData.overallSignal.signal,confidence:flowData.overallSignal.confidence};}// Existing helper methods\ngeneratePriceHistory(currentPrice){let days=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const prices=[];let price=currentPrice*0.95;for(let i=0;i<days;i++){price=price*(1+(Math.random()-0.5)*0.03);prices.push(price);}return prices;}calculateVolatility(prices){if(prices.length<2)return 0.2;const returns=[];for(let i=1;i<prices.length;i++){returns.push((prices[i]-prices[i-1])/prices[i-1]);}const avgReturn=returns.reduce((a,b)=>a+b,0)/returns.length;const variance=returns.reduce((sum,ret)=>sum+Math.pow(ret-avgReturn,2),0)/returns.length;return Math.sqrt(variance*252);}}export default new EnhancedMLEngine();","map":{"version":3,"names":["technicalAnalysis","flowAnalysis","EnhancedMLEngine","constructor","strategies","momentum","weight","performance","parameters","rsiThreshold","macdSignal","volumeMultiplier","meanReversion","rsiOversold","rsiOverbought","bollingerPosition","breakout","atrMultiplier","volumeThreshold","adxStrength","flowBased","whaleThreshold","sentimentScore","callPutRatio","scalping","quickRsi","fastEma","slowEma","swing","sma20","sma50","supportResistance","features","learning","totalTrades","successfulTrades","strategyPerformance","adaptiveWeights","confidenceThreshold","generateEnhancedRecommendations","marketData","optionsFlowData","arguments","length","undefined","recommendations","symbol","stockData","Object","entries","technicalData","performCompleteAnalysis","flowData","symbolFlow","filter","flow","ticker","toUpperCase","analyzeFlowPatterns","extractEnhancedFeatures","analysis","performEnhancedAnalysis","confidence","recommendation","action","strategy","primaryStrategy","entryPrice","price","targetPrice","calculateEnhancedTarget","stopLoss","calculateEnhancedStopLoss","reasoning","riskReward","timeframe","technicalSignals","summarizeTechnicalSignals","flowSignals","summarizeFlowSignals","probability","calculateSuccessProbability","positionSize","calculatePositionSize","timestamp","Date","now","technicalScore","flowScore","overallSignal","score","volatilityScore","momentumScore","supportLevel","resistanceLevel","push","error","console","concat","sort","a","b","slice","prices","generatePriceHistory","volume","change","changePercent","rsi","macd","signal","macdHistogram","histogram","bollingerBands","position","bollingerBandwidth","bandwidth","adx","adxTrend","trend","ema12","ema26","atr","volatility","calculateVolatility","vwap","obv","pivotPoints","s1","low","r1","high","flowSentiment","sentimentAnalysis","whaleActivity","totalWhalePremium","gammaExposure","gamma","netGamma","trendStrength","calculateTrendStrength","calculateMomentumScore","calculateVolatilityScore","volumeScore","calculateVolumeScore","strategyScores","strategyReasons","analyzeMomentumStrategy","getMomentumReasoning","analyzeMeanReversionStrategy","getMeanReversionReasoning","analyzeBreakoutStrategy","getBreakoutReasoning","analyzeFlowStrategy","getFlowReasoning","analyzeSwingStrategy","getSwingReasoning","finalScore","totalWeight","keys","forEach","adjustedWeight","Math","abs","normalizedScore","min","reduce","maxStrategy","parseFloat","toFixed","join","calculateRiskReward","selectTimeframe","overallTechnicalSignal","max","williamsR","stochastic","k","whaleCallPutRatio","unusualActivity","significance","activity","distanceFromSupport","distanceFromResistance","strength","crossover","atrScore","bbScore","avgVolume","baseMultiplier","volatilityAdjustment","confidenceAdjustment","adjustedMultiplier","stopDistance","baseRatio","finalRatio","strategyPerf","round","baseSize","confidenceMultiplier","riskAdjustment","reasons","includes","bollingerSignal","sentiment","totalWhaleFlows","currentPrice","days","i","random","returns","avgReturn","variance","sum","ret","pow","sqrt"],"sources":["/home/user/webapp/src/services/enhancedMLEngine.js"],"sourcesContent":["/**\n * Enhanced Machine Learning Trading Engine\n * Advanced AI-powered trading strategies with technical analysis and flow integration\n */\n\nimport technicalAnalysis from './technicalAnalysis.js';\nimport flowAnalysis from './flowAnalysis.js';\n\nclass EnhancedMLEngine {\n    constructor() {\n        this.strategies = {\n            momentum: { \n                weight: 0.25, \n                performance: 0.68,\n                parameters: { rsiThreshold: 70, macdSignal: true, volumeMultiplier: 1.5 }\n            },\n            meanReversion: { \n                weight: 0.20, \n                performance: 0.62,\n                parameters: { rsiOversold: 30, rsiOverbought: 70, bollingerPosition: 0.1 }\n            },\n            breakout: { \n                weight: 0.20, \n                performance: 0.75,\n                parameters: { atrMultiplier: 2.0, volumeThreshold: 2.0, adxStrength: 25 }\n            },\n            flowBased: { \n                weight: 0.15, \n                performance: 0.72,\n                parameters: { whaleThreshold: 50000, sentimentScore: 60, callPutRatio: 1.2 }\n            },\n            scalping: { \n                weight: 0.10, \n                performance: 0.58,\n                parameters: { quickRsi: 14, fastEma: 9, slowEma: 21 }\n            },\n            swing: { \n                weight: 0.10, \n                performance: 0.71,\n                parameters: { sma20: true, sma50: true, supportResistance: true }\n            }\n        };\n        \n        this.features = [\n            'price', 'volume', 'change', 'rsi', 'macd', 'volatility',\n            'trend', 'momentum', 'support', 'resistance', 'bollinger',\n            'adx', 'stochastic', 'williamsR', 'atr', 'vwap', 'obv',\n            'flowSentiment', 'whaleActivity', 'gammaExposure'\n        ];\n        \n        this.learning = {\n            totalTrades: 0,\n            successfulTrades: 0,\n            strategyPerformance: {},\n            adaptiveWeights: true,\n            confidenceThreshold: 65\n        };\n    }\n\n    // ==================== ENHANCED RECOMMENDATION ENGINE ====================\n\n    /**\n     * Generate enhanced AI recommendations using technical analysis and flow data\n     */\n    async generateEnhancedRecommendations(marketData, optionsFlowData = null) {\n        const recommendations = [];\n        \n        for (const [symbol, stockData] of Object.entries(marketData)) {\n            try {\n                // Perform comprehensive technical analysis\n                const technicalData = technicalAnalysis.performCompleteAnalysis(stockData);\n                \n                // Analyze options flow if available\n                let flowData = null;\n                if (optionsFlowData && optionsFlowData.length > 0) {\n                    const symbolFlow = optionsFlowData.filter(flow => \n                        (flow.symbol || flow.ticker || '').toUpperCase() === symbol.toUpperCase()\n                    );\n                    flowData = flowAnalysis.analyzeFlowPatterns(symbolFlow);\n                }\n                \n                // Extract enhanced features\n                const features = this.extractEnhancedFeatures(stockData, technicalData, flowData);\n                \n                // Generate analysis using multiple strategies\n                const analysis = this.performEnhancedAnalysis(features, technicalData, flowData);\n                \n                if (analysis.confidence >= this.learning.confidenceThreshold) {\n                    const recommendation = {\n                        symbol,\n                        action: analysis.action,\n                        confidence: analysis.confidence,\n                        strategy: analysis.primaryStrategy,\n                        entryPrice: stockData.price,\n                        targetPrice: this.calculateEnhancedTarget(stockData.price, analysis),\n                        stopLoss: this.calculateEnhancedStopLoss(stockData.price, analysis),\n                        reasoning: analysis.reasoning,\n                        riskReward: analysis.riskReward,\n                        timeframe: analysis.timeframe,\n                        technicalSignals: this.summarizeTechnicalSignals(technicalData),\n                        flowSignals: flowData ? this.summarizeFlowSignals(flowData) : null,\n                        probability: this.calculateSuccessProbability(analysis),\n                        positionSize: this.calculatePositionSize(analysis),\n                        timestamp: Date.now(),\n                        // Enhanced data\n                        technicalScore: analysis.technicalScore,\n                        flowScore: flowData ? flowData.overallSignal.score : 0,\n                        volatilityScore: features.volatilityScore,\n                        momentumScore: features.momentumScore,\n                        supportLevel: features.supportLevel,\n                        resistanceLevel: features.resistanceLevel\n                    };\n                    \n                    recommendations.push(recommendation);\n                }\n            } catch (error) {\n                console.error(`Error analyzing ${symbol}:`, error);\n            }\n        }\n        \n        // Sort by confidence and return top recommendations\n        return recommendations\n            .sort((a, b) => b.confidence - a.confidence)\n            .slice(0, 10);\n    }\n\n    /**\n     * Extract enhanced features combining technical and flow data\n     */\n    extractEnhancedFeatures(stockData, technicalData, flowData) {\n        const prices = this.generatePriceHistory(stockData.price);\n        \n        const features = {\n            // Basic features\n            price: stockData.price,\n            volume: stockData.volume / 1000000,\n            change: stockData.changePercent,\n            \n            // Technical features\n            rsi: technicalData.rsi || 50,\n            macd: technicalData.macd ? technicalData.macd.macd : 0,\n            macdSignal: technicalData.macd ? technicalData.macd.signal : 0,\n            macdHistogram: technicalData.macd ? technicalData.macd.histogram : 0,\n            \n            // Bollinger Bands\n            bollingerPosition: technicalData.bollingerBands ? \n                technicalData.bollingerBands.position : 50,\n            bollingerBandwidth: technicalData.bollingerBands ? \n                technicalData.bollingerBands.bandwidth : 20,\n            \n            // Trend indicators\n            adx: technicalData.adx ? technicalData.adx.adx : 20,\n            adxTrend: technicalData.adx ? technicalData.adx.trend : 'WEAK_TREND',\n            sma20: technicalData.sma20 || stockData.price,\n            sma50: technicalData.sma50 || stockData.price,\n            ema12: technicalData.ema12 || stockData.price,\n            ema26: technicalData.ema26 || stockData.price,\n            \n            // Volatility\n            atr: technicalData.atr || (stockData.price * 0.02),\n            volatility: this.calculateVolatility(prices),\n            \n            // Volume indicators\n            vwap: technicalData.vwap || stockData.price,\n            obv: technicalData.obv || 0,\n            \n            // Support/Resistance\n            supportLevel: technicalData.pivotPoints ? technicalData.pivotPoints.s1 : stockData.low,\n            resistanceLevel: technicalData.pivotPoints ? technicalData.pivotPoints.r1 : stockData.high,\n            \n            // Flow features (if available)\n            flowSentiment: flowData ? flowData.sentimentAnalysis.sentimentScore : 50,\n            whaleActivity: flowData ? flowData.whaleActivity.totalWhalePremium : 0,\n            callPutRatio: flowData ? flowData.sentimentAnalysis.callPutRatio : 1,\n            gammaExposure: flowData ? flowData.gamma.netGamma : 0,\n            \n            // Derived features\n            trendStrength: this.calculateTrendStrength(technicalData),\n            momentumScore: this.calculateMomentumScore(technicalData),\n            volatilityScore: this.calculateVolatilityScore(technicalData),\n            volumeScore: this.calculateVolumeScore(stockData, technicalData)\n        };\n        \n        return features;\n    }\n\n    /**\n     * Perform enhanced analysis using multiple strategies\n     */\n    performEnhancedAnalysis(features, technicalData, flowData) {\n        const strategyScores = {};\n        const strategyReasons = {};\n        \n        // Momentum Strategy Analysis\n        strategyScores.momentum = this.analyzeMomentumStrategy(features, technicalData);\n        strategyReasons.momentum = this.getMomentumReasoning(features, technicalData);\n        \n        // Mean Reversion Strategy Analysis\n        strategyScores.meanReversion = this.analyzeMeanReversionStrategy(features, technicalData);\n        strategyReasons.meanReversion = this.getMeanReversionReasoning(features, technicalData);\n        \n        // Breakout Strategy Analysis\n        strategyScores.breakout = this.analyzeBreakoutStrategy(features, technicalData);\n        strategyReasons.breakout = this.getBreakoutReasoning(features, technicalData);\n        \n        // Flow-Based Strategy Analysis\n        if (flowData) {\n            strategyScores.flowBased = this.analyzeFlowStrategy(features, flowData);\n            strategyReasons.flowBased = this.getFlowReasoning(features, flowData);\n        }\n        \n        // Swing Strategy Analysis\n        strategyScores.swing = this.analyzeSwingStrategy(features, technicalData);\n        strategyReasons.swing = this.getSwingReasoning(features, technicalData);\n        \n        // Calculate weighted final score\n        let finalScore = 0;\n        let totalWeight = 0;\n        const reasoning = [];\n        \n        Object.keys(strategyScores).forEach(strategy => {\n            const weight = this.strategies[strategy].weight;\n            const performance = this.strategies[strategy].performance;\n            const adjustedWeight = weight * performance; // Weight by historical performance\n            \n            finalScore += strategyScores[strategy] * adjustedWeight;\n            totalWeight += adjustedWeight;\n            \n            if (Math.abs(strategyScores[strategy]) > 0.3) {\n                reasoning.push(`${strategy}: ${strategyReasons[strategy]}`);\n            }\n        });\n        \n        const normalizedScore = totalWeight > 0 ? finalScore / totalWeight : 0;\n        const action = normalizedScore > 0.15 ? 'BUY' : \n                     normalizedScore < -0.15 ? 'SELL' : 'HOLD';\n        const confidence = Math.min(Math.abs(normalizedScore) * 100 + 50, 95);\n        \n        // Determine primary strategy\n        const primaryStrategy = Object.keys(strategyScores).reduce((maxStrategy, strategy) => \n            Math.abs(strategyScores[strategy]) > Math.abs(strategyScores[maxStrategy] || 0) ? \n            strategy : maxStrategy, 'momentum');\n        \n        return {\n            action,\n            confidence: parseFloat(confidence.toFixed(1)),\n            primaryStrategy,\n            reasoning: reasoning.join(' | '),\n            riskReward: this.calculateRiskReward(normalizedScore, features),\n            timeframe: this.selectTimeframe(features, primaryStrategy),\n            technicalScore: normalizedScore,\n            strategyScores,\n            overallTechnicalSignal: technicalData.overallSignal\n        };\n    }\n\n    // ==================== STRATEGY ANALYZERS ====================\n\n    /**\n     * Analyze momentum strategy\n     */\n    analyzeMomentumStrategy(features, technicalData) {\n        let score = 0;\n        \n        // RSI momentum\n        if (features.rsi > 60 && features.rsi < 80) score += 0.3;\n        else if (features.rsi < 40 && features.rsi > 20) score -= 0.3;\n        \n        // MACD momentum\n        if (features.macdHistogram > 0 && features.macd > features.macdSignal) score += 0.25;\n        else if (features.macdHistogram < 0 && features.macd < features.macdSignal) score -= 0.25;\n        \n        // Price vs moving averages\n        if (features.price > features.ema12 && features.ema12 > features.ema26) score += 0.2;\n        else if (features.price < features.ema12 && features.ema12 < features.ema26) score -= 0.2;\n        \n        // Volume confirmation\n        if (features.volumeScore > 1.2) score += 0.15;\n        \n        // ADX trend strength\n        if (features.adxTrend === 'STRONG_UPTREND') score += 0.1;\n        else if (features.adxTrend === 'STRONG_DOWNTREND') score -= 0.1;\n        \n        return Math.max(-1, Math.min(1, score));\n    }\n\n    /**\n     * Analyze mean reversion strategy\n     */\n    analyzeMeanReversionStrategy(features, technicalData) {\n        let score = 0;\n        \n        // RSI extremes\n        if (features.rsi < 30) score += 0.4;\n        else if (features.rsi > 70) score -= 0.4;\n        \n        // Bollinger Bands position\n        if (features.bollingerPosition < 20) score += 0.3;\n        else if (features.bollingerPosition > 80) score -= 0.3;\n        \n        // Williams %R extremes\n        const williamsR = technicalData.williamsR;\n        if (williamsR && williamsR < -80) score += 0.2;\n        else if (williamsR && williamsR > -20) score -= 0.2;\n        \n        // Stochastic oversold/overbought\n        if (technicalData.stochastic) {\n            if (technicalData.stochastic.k < 20) score += 0.1;\n            else if (technicalData.stochastic.k > 80) score -= 0.1;\n        }\n        \n        return Math.max(-1, Math.min(1, score));\n    }\n\n    /**\n     * Analyze breakout strategy\n     */\n    analyzeBreakoutStrategy(features, technicalData) {\n        let score = 0;\n        \n        // Price breakout above resistance\n        if (features.price > features.resistanceLevel * 1.02) score += 0.4;\n        else if (features.price < features.supportLevel * 0.98) score -= 0.4;\n        \n        // Volume confirmation\n        if (features.volumeScore > 1.5) score += 0.3;\n        \n        // ATR expansion (volatility increase)\n        if (features.volatilityScore > 1.2) score += 0.2;\n        \n        // Bollinger band squeeze release\n        if (features.bollingerBandwidth < 15 && features.bollingerPosition > 60) score += 0.1;\n        else if (features.bollingerBandwidth < 15 && features.bollingerPosition < 40) score -= 0.1;\n        \n        return Math.max(-1, Math.min(1, score));\n    }\n\n    /**\n     * Analyze flow-based strategy\n     */\n    analyzeFlowStrategy(features, flowData) {\n        let score = 0;\n        \n        // Whale activity\n        if (flowData.whaleActivity.totalWhalePremium > 100000) {\n            if (flowData.whaleActivity.whaleCallPutRatio > 1.5) score += 0.4;\n            else if (flowData.whaleActivity.whaleCallPutRatio < 0.7) score -= 0.4;\n        }\n        \n        // Overall sentiment\n        if (flowData.sentimentAnalysis.sentimentScore > 70) score += 0.3;\n        else if (flowData.sentimentAnalysis.sentimentScore < 30) score -= 0.3;\n        \n        // Unusual activity\n        if (flowData.unusualActivity.length > 0) {\n            const significance = flowData.unusualActivity.reduce((max, activity) => \n                activity.significance === 'HIGH' ? Math.max(max, 0.2) : \n                activity.significance === 'MEDIUM' ? Math.max(max, 0.1) : max, 0);\n            score += flowData.overallSignal.score > 0 ? significance : -significance;\n        }\n        \n        return Math.max(-1, Math.min(1, score));\n    }\n\n    /**\n     * Analyze swing strategy\n     */\n    analyzeSwingStrategy(features, technicalData) {\n        let score = 0;\n        \n        // Price position relative to moving averages\n        if (features.price > features.sma20 && features.sma20 > features.sma50) score += 0.3;\n        else if (features.price < features.sma20 && features.sma20 < features.sma50) score -= 0.3;\n        \n        // Support/resistance levels\n        const distanceFromSupport = (features.price - features.supportLevel) / features.price;\n        const distanceFromResistance = (features.resistanceLevel - features.price) / features.price;\n        \n        if (distanceFromSupport < 0.02 && distanceFromSupport > 0) score += 0.2;\n        if (distanceFromResistance < 0.02 && distanceFromResistance > 0) score -= 0.2;\n        \n        // VWAP position\n        if (features.price > features.vwap * 1.01) score += 0.1;\n        else if (features.price < features.vwap * 0.99) score -= 0.1;\n        \n        return Math.max(-1, Math.min(1, score));\n    }\n\n    // ==================== HELPER METHODS ====================\n\n    calculateTrendStrength(technicalData) {\n        let strength = 0;\n        \n        if (technicalData.adx && technicalData.adx.adx > 25) strength += 0.3;\n        if (technicalData.macd && technicalData.macd.crossover === 'BULLISH') strength += 0.2;\n        if (technicalData.sma20 && technicalData.sma50 && technicalData.sma20 > technicalData.sma50) strength += 0.2;\n        \n        return Math.min(strength, 1);\n    }\n\n    calculateMomentumScore(technicalData) {\n        let momentum = 0;\n        \n        if (technicalData.rsi > 50) momentum += (technicalData.rsi - 50) / 50 * 0.4;\n        else momentum -= (50 - technicalData.rsi) / 50 * 0.4;\n        \n        if (technicalData.macd && technicalData.macd.histogram > 0) momentum += 0.3;\n        else if (technicalData.macd && technicalData.macd.histogram < 0) momentum -= 0.3;\n        \n        return Math.max(-1, Math.min(1, momentum));\n    }\n\n    calculateVolatilityScore(technicalData) {\n        if (!technicalData.atr || !technicalData.bollingerBands) return 1;\n        \n        // Higher ATR and Bollinger bandwidth = higher volatility\n        const atrScore = Math.min(technicalData.atr / 5, 2); // Normalize ATR\n        const bbScore = technicalData.bollingerBands.bandwidth / 20; // Normalize bandwidth\n        \n        return (atrScore + bbScore) / 2;\n    }\n\n    calculateVolumeScore(stockData, technicalData) {\n        // Compare current volume to average (simplified)\n        const avgVolume = stockData.volume * 0.8; // Assume current is 20% above average\n        return stockData.volume / avgVolume;\n    }\n\n    calculateEnhancedTarget(price, analysis) {\n        const baseMultiplier = analysis.action === 'BUY' ? 1.05 : 0.95;\n        \n        // Adjust based on volatility and confidence\n        const volatilityAdjustment = analysis.volatilityScore || 1;\n        const confidenceAdjustment = analysis.confidence / 100;\n        \n        const adjustedMultiplier = analysis.action === 'BUY' ? \n            1 + (0.05 * volatilityAdjustment * confidenceAdjustment) :\n            1 - (0.05 * volatilityAdjustment * confidenceAdjustment);\n        \n        return parseFloat((price * adjustedMultiplier).toFixed(2));\n    }\n\n    calculateEnhancedStopLoss(price, analysis) {\n        const baseMultiplier = analysis.action === 'BUY' ? 0.97 : 1.03;\n        \n        // Tighter stops for higher confidence trades\n        const confidenceAdjustment = analysis.confidence / 100;\n        const stopDistance = 0.03 * (1 - confidenceAdjustment * 0.3);\n        \n        const adjustedMultiplier = analysis.action === 'BUY' ? \n            1 - stopDistance : 1 + stopDistance;\n        \n        return parseFloat((price * adjustedMultiplier).toFixed(2));\n    }\n\n    calculateRiskReward(score, features) {\n        const baseRatio = Math.abs(score) * 2 + 1;\n        const volatilityAdjustment = (features.volatilityScore || 1) * 0.5;\n        const finalRatio = baseRatio + volatilityAdjustment;\n        \n        return `1:${finalRatio.toFixed(1)}`;\n    }\n\n    calculateSuccessProbability(analysis) {\n        // Base probability from confidence\n        let probability = analysis.confidence;\n        \n        // Adjust based on strategy performance\n        const strategyPerf = this.strategies[analysis.primaryStrategy].performance;\n        probability = probability * strategyPerf;\n        \n        return Math.min(95, Math.max(5, Math.round(probability)));\n    }\n\n    calculatePositionSize(analysis) {\n        // Risk-based position sizing (simplified)\n        const baseSize = 1000; // Base position size\n        const confidenceMultiplier = analysis.confidence / 100;\n        const riskAdjustment = 1 / (analysis.volatilityScore || 1);\n        \n        return Math.round(baseSize * confidenceMultiplier * riskAdjustment);\n    }\n\n    selectTimeframe(features, strategy) {\n        if (strategy === 'scalping') return '5-15 minutes';\n        if (strategy === 'momentum') return '1-3 hours';\n        if (strategy === 'meanReversion') return '2-6 hours';\n        if (strategy === 'breakout') return '1-5 days';\n        if (strategy === 'swing') return '3-10 days';\n        if (strategy === 'flowBased') return '1-2 days';\n        \n        return '1-3 days';\n    }\n\n    // Reasoning methods\n    getMomentumReasoning(features, technicalData) {\n        const reasons = [];\n        if (features.rsi > 60) reasons.push('Strong RSI momentum');\n        if (features.macd > features.macdSignal) reasons.push('MACD bullish crossover');\n        if (features.adxTrend.includes('STRONG')) reasons.push('Strong trend detected');\n        return reasons.join(', ') || 'Momentum analysis';\n    }\n\n    getMeanReversionReasoning(features, technicalData) {\n        const reasons = [];\n        if (features.rsi < 30) reasons.push('RSI oversold');\n        if (features.rsi > 70) reasons.push('RSI overbought');\n        if (features.bollingerPosition < 20) reasons.push('Below lower Bollinger band');\n        if (features.bollingerPosition > 80) reasons.push('Above upper Bollinger band');\n        return reasons.join(', ') || 'Mean reversion opportunity';\n    }\n\n    getBreakoutReasoning(features, technicalData) {\n        const reasons = [];\n        if (features.price > features.resistanceLevel) reasons.push('Resistance breakout');\n        if (features.price < features.supportLevel) reasons.push('Support breakdown');\n        if (features.volumeScore > 1.5) reasons.push('Volume confirmation');\n        return reasons.join(', ') || 'Breakout pattern';\n    }\n\n    getFlowReasoning(features, flowData) {\n        const reasons = [];\n        if (flowData.whaleActivity.totalWhalePremium > 100000) reasons.push('Whale activity detected');\n        if (flowData.sentimentAnalysis.sentimentScore > 70) reasons.push('Bullish flow sentiment');\n        if (flowData.sentimentAnalysis.sentimentScore < 30) reasons.push('Bearish flow sentiment');\n        return reasons.join(', ') || 'Options flow analysis';\n    }\n\n    getSwingReasoning(features, technicalData) {\n        const reasons = [];\n        if (features.price > features.sma20) reasons.push('Above SMA20');\n        if (features.price > features.vwap) reasons.push('Above VWAP');\n        return reasons.join(', ') || 'Swing trading setup';\n    }\n\n    summarizeTechnicalSignals(technicalData) {\n        return {\n            rsi: technicalData.rsi,\n            macdSignal: technicalData.macd ? technicalData.macd.crossover : null,\n            bollingerSignal: technicalData.bollingerBands ? technicalData.bollingerBands.signal : null,\n            overallSignal: technicalData.overallSignal ? technicalData.overallSignal.signal : null,\n            trendStrength: technicalData.adx ? technicalData.adx.trend : null\n        };\n    }\n\n    summarizeFlowSignals(flowData) {\n        return {\n            sentiment: flowData.sentimentAnalysis.sentiment,\n            whaleActivity: flowData.whaleActivity.totalWhaleFlows,\n            callPutRatio: flowData.sentimentAnalysis.callPutRatio,\n            overallSignal: flowData.overallSignal.signal,\n            confidence: flowData.overallSignal.confidence\n        };\n    }\n\n    // Existing helper methods\n    generatePriceHistory(currentPrice, days = 50) {\n        const prices = [];\n        let price = currentPrice * 0.95;\n        \n        for (let i = 0; i < days; i++) {\n            price = price * (1 + (Math.random() - 0.5) * 0.03);\n            prices.push(price);\n        }\n        \n        return prices;\n    }\n\n    calculateVolatility(prices) {\n        if (prices.length < 2) return 0.2;\n        \n        const returns = [];\n        for (let i = 1; i < prices.length; i++) {\n            returns.push((prices[i] - prices[i - 1]) / prices[i - 1]);\n        }\n        \n        const avgReturn = returns.reduce((a, b) => a + b, 0) / returns.length;\n        const variance = returns.reduce((sum, ret) => \n            sum + Math.pow(ret - avgReturn, 2), 0) / returns.length;\n        \n        return Math.sqrt(variance * 252);\n    }\n}\n\nexport default new EnhancedMLEngine();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}