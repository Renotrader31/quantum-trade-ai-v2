{"ast":null,"code":"import _objectSpread from\"/home/user/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';class RealDataService{constructor(){this.apiKeys={unusualWhales:process.env.REACT_APP_UNUSUAL_WHALES_API_KEY,alphaVantage:process.env.REACT_APP_ALPHA_VANTAGE_KEY,twelveData:process.env.REACT_APP_TWELVE_DATA_KEY,polygon:process.env.REACT_APP_POLYGON_API_KEY,fmp:process.env.REACT_APP_FMP_API_KEY,ortex:process.env.REACT_APP_ORTEX_API_KEY};this.timeout=parseInt(process.env.REACT_APP_API_TIMEOUT)||10000;this.cache=new Map();this.cacheTimeout=30000;// 30 seconds\n// API endpoints\nthis.endpoints={polygon:'https://api.polygon.io',alphaVantage:'https://www.alphavantage.co',twelveData:'https://api.twelvedata.com',fmp:'https://financialmodelingprep.com/api/v3',unusualWhales:'https://api.unusualwhales.com',ortex:'https://api.ortex.com'};console.log('🔑 RealDataService initialized with API keys:',{unusualWhales:!!this.apiKeys.unusualWhales,alphaVantage:!!this.apiKeys.alphaVantage,twelveData:!!this.apiKeys.twelveData,polygon:!!this.apiKeys.polygon,fmp:!!this.apiKeys.fmp,ortex:!!this.apiKeys.ortex});}// Cache management\ngetCacheKey(endpoint,params){return\"\".concat(endpoint,\"_\").concat(JSON.stringify(params));}isCacheValid(timestamp){return Date.now()-timestamp<this.cacheTimeout;}setCache(key,data){this.cache.set(key,{data,timestamp:Date.now()});}getCache(key){const cached=this.cache.get(key);if(cached&&this.isCacheValid(cached.timestamp)){return cached.data;}return null;}// Generic API request handler\nasync makeRequest(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await axios.get(url,_objectSpread({timeout:this.timeout},options));return response.data;}catch(error){console.error(\"\\u274C API Request failed for \".concat(url,\":\"),error.message);throw error;}}// Polygon.io - Real-time stock data\nasync getPolygonStockPrice(symbol){if(!this.apiKeys.polygon){throw new Error('Polygon API key not configured');}const cacheKey=this.getCacheKey('polygon_stock',{symbol});const cached=this.getCache(cacheKey);if(cached)return cached;try{const url=\"\".concat(this.endpoints.polygon,\"/v2/aggs/ticker/\").concat(symbol,\"/prev?adjusted=true&apikey=\").concat(this.apiKeys.polygon);const data=await this.makeRequest(url);if(data.results&&data.results.length>0){const result=data.results[0];const stockData={symbol,price:result.c,open:result.o,high:result.h,low:result.l,volume:result.v,change:result.c-result.o,changePercent:(result.c-result.o)/result.o*100,source:'Polygon',timestamp:Date.now()};this.setCache(cacheKey,stockData);return stockData;}}catch(error){console.error(\"\\u274C Polygon API error for \".concat(symbol,\":\"),error.message);throw error;}}// Alpha Vantage - Market data and indicators\nasync getAlphaVantageData(symbol){let function_type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'TIME_SERIES_INTRADAY';if(!this.apiKeys.alphaVantage){throw new Error('Alpha Vantage API key not configured');}const cacheKey=this.getCacheKey('alphavantage',{symbol,function_type});const cached=this.getCache(cacheKey);if(cached)return cached;try{const url=\"\".concat(this.endpoints.alphaVantage,\"/query?function=\").concat(function_type,\"&symbol=\").concat(symbol,\"&interval=1min&apikey=\").concat(this.apiKeys.alphaVantage);const data=await this.makeRequest(url);this.setCache(cacheKey,data);return data;}catch(error){console.error(\"\\u274C Alpha Vantage API error for \".concat(symbol,\":\"),error.message);throw error;}}// Twelve Data - Financial data\nasync getTwelveDataQuote(symbol){if(!this.apiKeys.twelveData){throw new Error('Twelve Data API key not configured');}const cacheKey=this.getCacheKey('twelvedata_quote',{symbol});const cached=this.getCache(cacheKey);if(cached)return cached;try{const url=\"\".concat(this.endpoints.twelveData,\"/quote?symbol=\").concat(symbol,\"&apikey=\").concat(this.apiKeys.twelveData);const data=await this.makeRequest(url);if(data&&!data.code){const stockData={symbol:data.symbol,price:parseFloat(data.close),open:parseFloat(data.open),high:parseFloat(data.high),low:parseFloat(data.low),volume:parseInt(data.volume),change:parseFloat(data.change),changePercent:parseFloat(data.percent_change),source:'Twelve Data',timestamp:Date.now()};this.setCache(cacheKey,stockData);return stockData;}}catch(error){console.error(\"\\u274C Twelve Data API error for \".concat(symbol,\":\"),error.message);throw error;}}// Financial Modeling Prep - Comprehensive financial data\nasync getFMPQuote(symbol){if(!this.apiKeys.fmp){throw new Error('FMP API key not configured');}const cacheKey=this.getCacheKey('fmp_quote',{symbol});const cached=this.getCache(cacheKey);if(cached)return cached;try{const url=\"\".concat(this.endpoints.fmp,\"/quote/\").concat(symbol,\"?apikey=\").concat(this.apiKeys.fmp);const data=await this.makeRequest(url);if(data&&data.length>0){const quote=data[0];const stockData={symbol:quote.symbol,price:quote.price,open:quote.open,high:quote.dayHigh,low:quote.dayLow,volume:quote.volume,change:quote.change,changePercent:quote.changesPercentage,marketCap:quote.marketCap,pe:quote.pe,source:'FMP',timestamp:Date.now()};this.setCache(cacheKey,stockData);return stockData;}}catch(error){console.error(\"\\u274C FMP API error for \".concat(symbol,\":\"),error.message);throw error;}}// Unusual Whales - Options flow data\nasync getUnusualWhalesOptionsFlow(){let symbol=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(!this.apiKeys.unusualWhales){throw new Error('Unusual Whales API key not configured');}const cacheKey=this.getCacheKey('unusual_whales_flow',{symbol});const cached=this.getCache(cacheKey);if(cached)return cached;try{const baseUrl=\"\".concat(this.endpoints.unusualWhales,\"/api/stock_options_flow\");const url=symbol?\"\".concat(baseUrl,\"/\").concat(symbol):baseUrl;const data=await this.makeRequest(url,{headers:{'Authorization':\"Bearer \".concat(this.apiKeys.unusualWhales)}});this.setCache(cacheKey,data);return data;}catch(error){console.error(\"\\u274C Unusual Whales API error:\",error.message);throw error;}}// Ortex - Short interest data\nasync getOrtexShortInterest(symbol){if(!this.apiKeys.ortex){throw new Error('Ortex API key not configured');}const cacheKey=this.getCacheKey('ortex_short',{symbol});const cached=this.getCache(cacheKey);if(cached)return cached;try{const url=\"\".concat(this.endpoints.ortex,\"/securities/\").concat(symbol,\"/short_interest\");const data=await this.makeRequest(url,{headers:{'Authorization':\"Bearer \".concat(this.apiKeys.ortex)}});this.setCache(cacheKey,data);return data;}catch(error){console.error(\"\\u274C Ortex API error for \".concat(symbol,\":\"),error.message);throw error;}}// Unified method to get stock data from multiple sources\nasync getStockData(symbol){const results={};const errors=[];// Try multiple providers in parallel\nconst providers=[{name:'polygon',method:()=>this.getPolygonStockPrice(symbol)},{name:'twelveData',method:()=>this.getTwelveDataQuote(symbol)},{name:'fmp',method:()=>this.getFMPQuote(symbol)}];const promises=providers.map(async provider=>{try{const data=await provider.method();results[provider.name]=data;return{provider:provider.name,success:true,data};}catch(error){errors.push({provider:provider.name,error:error.message});return{provider:provider.name,success:false,error:error.message};}});const responses=await Promise.allSettled(promises);// Use the first successful response or combine data\nconst successful=responses.filter(r=>r.status==='fulfilled'&&r.value.success).map(r=>r.value.data);if(successful.length>0){// Use the most complete data (prefer FMP > Twelve Data > Polygon)\nconst priority=['fmp','twelveData','polygon'];for(const provider of priority){if(results[provider]){return _objectSpread(_objectSpread({},results[provider]),{},{sources:Object.keys(results),errors:errors.length>0?errors:undefined});}}return successful[0];}throw new Error(\"Failed to fetch data for \".concat(symbol,\" from all providers: \").concat(errors.map(e=>e.error).join(', ')));}// Get market overview with multiple stocks\nasync getMarketOverview(){const symbols=['SPY','QQQ','AAPL','NVDA','TSLA','MSFT','GOOGL','AMZN'];const stocks={};const errors=[];console.log('📊 Fetching market overview for symbols:',symbols);// Check if any API keys are available\nconst hasAnyApiKey=Object.values(this.apiKeys).some(key=>key&&key.trim()!=='');if(!hasAnyApiKey){console.log('🎯 No API keys configured - using demo data for enhanced features');return this.getDemoMarketData(symbols);}// Fetch data for all symbols\nconst promises=symbols.map(async symbol=>{try{const data=await this.getStockData(symbol);stocks[symbol]=data;return{symbol,success:true,data};}catch(error){console.error(\"\\u274C Failed to fetch data for \".concat(symbol,\":\"),error.message);errors.push({symbol,error:error.message});return{symbol,success:false,error:error.message};}});await Promise.allSettled(promises);// If no real data was fetched, fall back to demo data\nif(Object.keys(stocks).length===0){console.log('🎯 Real API calls failed - using demo data for enhanced features');return this.getDemoMarketData(symbols);}// Calculate market sentiment\nconst validStocks=Object.values(stocks).filter(stock=>stock.changePercent!==undefined);const totalChange=validStocks.reduce((sum,stock)=>sum+stock.changePercent,0);const avgChange=totalChange/validStocks.length;console.log(\"\\u2705 Successfully fetched data for \".concat(Object.keys(stocks).length,\"/\").concat(symbols.length,\" symbols\"));return{stocks,marketSentiment:avgChange>0.5?'Bullish':avgChange<-0.5?'Bearish':'Neutral',avgChange:parseFloat(avgChange.toFixed(2)),successCount:Object.keys(stocks).length,errorCount:errors.length,errors:errors.length>0?errors:undefined,timestamp:Date.now()};}// Demo market data for when API keys are not configured\ngetDemoMarketData(symbols){console.log('🎯 Generating demo market data for enhanced features showcase');const baseData={SPY:{base:545.20,change:1.45},QQQ:{base:465.80,change:2.12},AAPL:{base:224.50,change:-0.85},NVDA:{base:118.75,change:3.20},TSLA:{base:248.40,change:-1.60},MSFT:{base:415.30,change:1.25},GOOGL:{base:162.85,change:0.75},AMZN:{base:185.20,change:-0.45}};const stocks={};symbols.forEach(symbol=>{const data=baseData[symbol]||{base:100,change:0};const price=data.base+data.change;const open=data.base;const changePercent=data.change/data.base*100;stocks[symbol]={symbol,price:parseFloat(price.toFixed(2)),open:parseFloat(open.toFixed(2)),high:parseFloat((price+Math.abs(data.change)*0.5).toFixed(2)),low:parseFloat((price-Math.abs(data.change)*0.5).toFixed(2)),volume:Math.floor(Math.random()*50000000)+10000000,change:parseFloat(data.change.toFixed(2)),changePercent:parseFloat(changePercent.toFixed(2)),source:'Demo',timestamp:Date.now()};});const validStocks=Object.values(stocks);const totalChange=validStocks.reduce((sum,stock)=>sum+stock.changePercent,0);const avgChange=totalChange/validStocks.length;return{stocks,marketSentiment:avgChange>0.5?'Bullish':avgChange<-0.5?'Bearish':'Neutral',avgChange:parseFloat(avgChange.toFixed(2)),successCount:symbols.length,errorCount:0,demoMode:true,timestamp:Date.now()};}// Get options flow data\nasync getOptionsFlowData(){try{console.log('📈 Fetching options flow data from Unusual Whales...');const data=await this.getUnusualWhalesOptionsFlow();return data;}catch(error){console.error('❌ Failed to fetch options flow data:',error.message);throw error;}}// Get technical indicators\nasync getTechnicalIndicators(symbol){try{const data=await this.getAlphaVantageData(symbol,'RSI');return data;}catch(error){console.error(\"\\u274C Failed to fetch technical indicators for \".concat(symbol,\":\"),error.message);throw error;}}// Health check for all APIs\nasync healthCheck(){const services=[{name:'Polygon',check:()=>this.getPolygonStockPrice('AAPL')},{name:'Twelve Data',check:()=>this.getTwelveDataQuote('AAPL')},{name:'FMP',check:()=>this.getFMPQuote('AAPL')},{name:'Alpha Vantage',check:()=>this.getAlphaVantageData('AAPL')}];const results={};for(const service of services){try{await service.check();results[service.name]={status:'OK',timestamp:Date.now()};console.log(\"\\u2705 \".concat(service.name,\" API: OK\"));}catch(error){results[service.name]={status:'ERROR',error:error.message,timestamp:Date.now()};console.log(\"\\u274C \".concat(service.name,\" API: ERROR - \").concat(error.message));}}return results;}}export default new RealDataService();","map":{"version":3,"names":["axios","RealDataService","constructor","apiKeys","unusualWhales","process","env","REACT_APP_UNUSUAL_WHALES_API_KEY","alphaVantage","REACT_APP_ALPHA_VANTAGE_KEY","twelveData","REACT_APP_TWELVE_DATA_KEY","polygon","REACT_APP_POLYGON_API_KEY","fmp","REACT_APP_FMP_API_KEY","ortex","REACT_APP_ORTEX_API_KEY","timeout","parseInt","REACT_APP_API_TIMEOUT","cache","Map","cacheTimeout","endpoints","console","log","getCacheKey","endpoint","params","concat","JSON","stringify","isCacheValid","timestamp","Date","now","setCache","key","data","set","getCache","cached","get","makeRequest","url","options","arguments","length","undefined","response","_objectSpread","error","message","getPolygonStockPrice","symbol","Error","cacheKey","results","result","stockData","price","c","open","o","high","h","low","l","volume","v","change","changePercent","source","getAlphaVantageData","function_type","getTwelveDataQuote","code","parseFloat","close","percent_change","getFMPQuote","quote","dayHigh","dayLow","changesPercentage","marketCap","pe","getUnusualWhalesOptionsFlow","baseUrl","headers","getOrtexShortInterest","getStockData","errors","providers","name","method","promises","map","provider","success","push","responses","Promise","allSettled","successful","filter","r","status","value","priority","sources","Object","keys","e","join","getMarketOverview","symbols","stocks","hasAnyApiKey","values","some","trim","getDemoMarketData","validStocks","stock","totalChange","reduce","sum","avgChange","marketSentiment","toFixed","successCount","errorCount","baseData","SPY","base","QQQ","AAPL","NVDA","TSLA","MSFT","GOOGL","AMZN","forEach","Math","abs","floor","random","demoMode","getOptionsFlowData","getTechnicalIndicators","healthCheck","services","check","service"],"sources":["/home/user/webapp/src/services/realDataService.js"],"sourcesContent":["import axios from 'axios';\n\nclass RealDataService {\n    constructor() {\n        this.apiKeys = {\n            unusualWhales: process.env.REACT_APP_UNUSUAL_WHALES_API_KEY,\n            alphaVantage: process.env.REACT_APP_ALPHA_VANTAGE_KEY,\n            twelveData: process.env.REACT_APP_TWELVE_DATA_KEY,\n            polygon: process.env.REACT_APP_POLYGON_API_KEY,\n            fmp: process.env.REACT_APP_FMP_API_KEY,\n            ortex: process.env.REACT_APP_ORTEX_API_KEY\n        };\n        \n        this.timeout = parseInt(process.env.REACT_APP_API_TIMEOUT) || 10000;\n        this.cache = new Map();\n        this.cacheTimeout = 30000; // 30 seconds\n        \n        // API endpoints\n        this.endpoints = {\n            polygon: 'https://api.polygon.io',\n            alphaVantage: 'https://www.alphavantage.co',\n            twelveData: 'https://api.twelvedata.com',\n            fmp: 'https://financialmodelingprep.com/api/v3',\n            unusualWhales: 'https://api.unusualwhales.com',\n            ortex: 'https://api.ortex.com'\n        };\n        \n        console.log('🔑 RealDataService initialized with API keys:', {\n            unusualWhales: !!this.apiKeys.unusualWhales,\n            alphaVantage: !!this.apiKeys.alphaVantage,\n            twelveData: !!this.apiKeys.twelveData,\n            polygon: !!this.apiKeys.polygon,\n            fmp: !!this.apiKeys.fmp,\n            ortex: !!this.apiKeys.ortex\n        });\n    }\n\n    // Cache management\n    getCacheKey(endpoint, params) {\n        return `${endpoint}_${JSON.stringify(params)}`;\n    }\n\n    isCacheValid(timestamp) {\n        return Date.now() - timestamp < this.cacheTimeout;\n    }\n\n    setCache(key, data) {\n        this.cache.set(key, {\n            data,\n            timestamp: Date.now()\n        });\n    }\n\n    getCache(key) {\n        const cached = this.cache.get(key);\n        if (cached && this.isCacheValid(cached.timestamp)) {\n            return cached.data;\n        }\n        return null;\n    }\n\n    // Generic API request handler\n    async makeRequest(url, options = {}) {\n        try {\n            const response = await axios.get(url, {\n                timeout: this.timeout,\n                ...options\n            });\n            return response.data;\n        } catch (error) {\n            console.error(`❌ API Request failed for ${url}:`, error.message);\n            throw error;\n        }\n    }\n\n    // Polygon.io - Real-time stock data\n    async getPolygonStockPrice(symbol) {\n        if (!this.apiKeys.polygon) {\n            throw new Error('Polygon API key not configured');\n        }\n\n        const cacheKey = this.getCacheKey('polygon_stock', { symbol });\n        const cached = this.getCache(cacheKey);\n        if (cached) return cached;\n\n        try {\n            const url = `${this.endpoints.polygon}/v2/aggs/ticker/${symbol}/prev?adjusted=true&apikey=${this.apiKeys.polygon}`;\n            const data = await this.makeRequest(url);\n            \n            if (data.results && data.results.length > 0) {\n                const result = data.results[0];\n                const stockData = {\n                    symbol,\n                    price: result.c,\n                    open: result.o,\n                    high: result.h,\n                    low: result.l,\n                    volume: result.v,\n                    change: result.c - result.o,\n                    changePercent: ((result.c - result.o) / result.o) * 100,\n                    source: 'Polygon',\n                    timestamp: Date.now()\n                };\n                \n                this.setCache(cacheKey, stockData);\n                return stockData;\n            }\n        } catch (error) {\n            console.error(`❌ Polygon API error for ${symbol}:`, error.message);\n            throw error;\n        }\n    }\n\n    // Alpha Vantage - Market data and indicators\n    async getAlphaVantageData(symbol, function_type = 'TIME_SERIES_INTRADAY') {\n        if (!this.apiKeys.alphaVantage) {\n            throw new Error('Alpha Vantage API key not configured');\n        }\n\n        const cacheKey = this.getCacheKey('alphavantage', { symbol, function_type });\n        const cached = this.getCache(cacheKey);\n        if (cached) return cached;\n\n        try {\n            const url = `${this.endpoints.alphaVantage}/query?function=${function_type}&symbol=${symbol}&interval=1min&apikey=${this.apiKeys.alphaVantage}`;\n            const data = await this.makeRequest(url);\n            \n            this.setCache(cacheKey, data);\n            return data;\n        } catch (error) {\n            console.error(`❌ Alpha Vantage API error for ${symbol}:`, error.message);\n            throw error;\n        }\n    }\n\n    // Twelve Data - Financial data\n    async getTwelveDataQuote(symbol) {\n        if (!this.apiKeys.twelveData) {\n            throw new Error('Twelve Data API key not configured');\n        }\n\n        const cacheKey = this.getCacheKey('twelvedata_quote', { symbol });\n        const cached = this.getCache(cacheKey);\n        if (cached) return cached;\n\n        try {\n            const url = `${this.endpoints.twelveData}/quote?symbol=${symbol}&apikey=${this.apiKeys.twelveData}`;\n            const data = await this.makeRequest(url);\n            \n            if (data && !data.code) {\n                const stockData = {\n                    symbol: data.symbol,\n                    price: parseFloat(data.close),\n                    open: parseFloat(data.open),\n                    high: parseFloat(data.high),\n                    low: parseFloat(data.low),\n                    volume: parseInt(data.volume),\n                    change: parseFloat(data.change),\n                    changePercent: parseFloat(data.percent_change),\n                    source: 'Twelve Data',\n                    timestamp: Date.now()\n                };\n                \n                this.setCache(cacheKey, stockData);\n                return stockData;\n            }\n        } catch (error) {\n            console.error(`❌ Twelve Data API error for ${symbol}:`, error.message);\n            throw error;\n        }\n    }\n\n    // Financial Modeling Prep - Comprehensive financial data\n    async getFMPQuote(symbol) {\n        if (!this.apiKeys.fmp) {\n            throw new Error('FMP API key not configured');\n        }\n\n        const cacheKey = this.getCacheKey('fmp_quote', { symbol });\n        const cached = this.getCache(cacheKey);\n        if (cached) return cached;\n\n        try {\n            const url = `${this.endpoints.fmp}/quote/${symbol}?apikey=${this.apiKeys.fmp}`;\n            const data = await this.makeRequest(url);\n            \n            if (data && data.length > 0) {\n                const quote = data[0];\n                const stockData = {\n                    symbol: quote.symbol,\n                    price: quote.price,\n                    open: quote.open,\n                    high: quote.dayHigh,\n                    low: quote.dayLow,\n                    volume: quote.volume,\n                    change: quote.change,\n                    changePercent: quote.changesPercentage,\n                    marketCap: quote.marketCap,\n                    pe: quote.pe,\n                    source: 'FMP',\n                    timestamp: Date.now()\n                };\n                \n                this.setCache(cacheKey, stockData);\n                return stockData;\n            }\n        } catch (error) {\n            console.error(`❌ FMP API error for ${symbol}:`, error.message);\n            throw error;\n        }\n    }\n\n    // Unusual Whales - Options flow data\n    async getUnusualWhalesOptionsFlow(symbol = null) {\n        if (!this.apiKeys.unusualWhales) {\n            throw new Error('Unusual Whales API key not configured');\n        }\n\n        const cacheKey = this.getCacheKey('unusual_whales_flow', { symbol });\n        const cached = this.getCache(cacheKey);\n        if (cached) return cached;\n\n        try {\n            const baseUrl = `${this.endpoints.unusualWhales}/api/stock_options_flow`;\n            const url = symbol ? `${baseUrl}/${symbol}` : baseUrl;\n            \n            const data = await this.makeRequest(url, {\n                headers: {\n                    'Authorization': `Bearer ${this.apiKeys.unusualWhales}`\n                }\n            });\n            \n            this.setCache(cacheKey, data);\n            return data;\n        } catch (error) {\n            console.error(`❌ Unusual Whales API error:`, error.message);\n            throw error;\n        }\n    }\n\n    // Ortex - Short interest data\n    async getOrtexShortInterest(symbol) {\n        if (!this.apiKeys.ortex) {\n            throw new Error('Ortex API key not configured');\n        }\n\n        const cacheKey = this.getCacheKey('ortex_short', { symbol });\n        const cached = this.getCache(cacheKey);\n        if (cached) return cached;\n\n        try {\n            const url = `${this.endpoints.ortex}/securities/${symbol}/short_interest`;\n            const data = await this.makeRequest(url, {\n                headers: {\n                    'Authorization': `Bearer ${this.apiKeys.ortex}`\n                }\n            });\n            \n            this.setCache(cacheKey, data);\n            return data;\n        } catch (error) {\n            console.error(`❌ Ortex API error for ${symbol}:`, error.message);\n            throw error;\n        }\n    }\n\n    // Unified method to get stock data from multiple sources\n    async getStockData(symbol) {\n        const results = {};\n        const errors = [];\n\n        // Try multiple providers in parallel\n        const providers = [\n            { name: 'polygon', method: () => this.getPolygonStockPrice(symbol) },\n            { name: 'twelveData', method: () => this.getTwelveDataQuote(symbol) },\n            { name: 'fmp', method: () => this.getFMPQuote(symbol) }\n        ];\n\n        const promises = providers.map(async (provider) => {\n            try {\n                const data = await provider.method();\n                results[provider.name] = data;\n                return { provider: provider.name, success: true, data };\n            } catch (error) {\n                errors.push({ provider: provider.name, error: error.message });\n                return { provider: provider.name, success: false, error: error.message };\n            }\n        });\n\n        const responses = await Promise.allSettled(promises);\n        \n        // Use the first successful response or combine data\n        const successful = responses\n            .filter(r => r.status === 'fulfilled' && r.value.success)\n            .map(r => r.value.data);\n\n        if (successful.length > 0) {\n            // Use the most complete data (prefer FMP > Twelve Data > Polygon)\n            const priority = ['fmp', 'twelveData', 'polygon'];\n            for (const provider of priority) {\n                if (results[provider]) {\n                    return {\n                        ...results[provider],\n                        sources: Object.keys(results),\n                        errors: errors.length > 0 ? errors : undefined\n                    };\n                }\n            }\n            return successful[0];\n        }\n\n        throw new Error(`Failed to fetch data for ${symbol} from all providers: ${errors.map(e => e.error).join(', ')}`);\n    }\n\n    // Get market overview with multiple stocks\n    async getMarketOverview() {\n        const symbols = ['SPY', 'QQQ', 'AAPL', 'NVDA', 'TSLA', 'MSFT', 'GOOGL', 'AMZN'];\n        const stocks = {};\n        const errors = [];\n\n        console.log('📊 Fetching market overview for symbols:', symbols);\n\n        // Check if any API keys are available\n        const hasAnyApiKey = Object.values(this.apiKeys).some(key => key && key.trim() !== '');\n        \n        if (!hasAnyApiKey) {\n            console.log('🎯 No API keys configured - using demo data for enhanced features');\n            return this.getDemoMarketData(symbols);\n        }\n\n        // Fetch data for all symbols\n        const promises = symbols.map(async (symbol) => {\n            try {\n                const data = await this.getStockData(symbol);\n                stocks[symbol] = data;\n                return { symbol, success: true, data };\n            } catch (error) {\n                console.error(`❌ Failed to fetch data for ${symbol}:`, error.message);\n                errors.push({ symbol, error: error.message });\n                return { symbol, success: false, error: error.message };\n            }\n        });\n\n        await Promise.allSettled(promises);\n\n        // If no real data was fetched, fall back to demo data\n        if (Object.keys(stocks).length === 0) {\n            console.log('🎯 Real API calls failed - using demo data for enhanced features');\n            return this.getDemoMarketData(symbols);\n        }\n\n        // Calculate market sentiment\n        const validStocks = Object.values(stocks).filter(stock => stock.changePercent !== undefined);\n        const totalChange = validStocks.reduce((sum, stock) => sum + stock.changePercent, 0);\n        const avgChange = totalChange / validStocks.length;\n\n        console.log(`✅ Successfully fetched data for ${Object.keys(stocks).length}/${symbols.length} symbols`);\n\n        return {\n            stocks,\n            marketSentiment: avgChange > 0.5 ? 'Bullish' : avgChange < -0.5 ? 'Bearish' : 'Neutral',\n            avgChange: parseFloat(avgChange.toFixed(2)),\n            successCount: Object.keys(stocks).length,\n            errorCount: errors.length,\n            errors: errors.length > 0 ? errors : undefined,\n            timestamp: Date.now()\n        };\n    }\n\n    // Demo market data for when API keys are not configured\n    getDemoMarketData(symbols) {\n        console.log('🎯 Generating demo market data for enhanced features showcase');\n        \n        const baseData = {\n            SPY: { base: 545.20, change: 1.45 },\n            QQQ: { base: 465.80, change: 2.12 },\n            AAPL: { base: 224.50, change: -0.85 },\n            NVDA: { base: 118.75, change: 3.20 },\n            TSLA: { base: 248.40, change: -1.60 },\n            MSFT: { base: 415.30, change: 1.25 },\n            GOOGL: { base: 162.85, change: 0.75 },\n            AMZN: { base: 185.20, change: -0.45 }\n        };\n\n        const stocks = {};\n        \n        symbols.forEach(symbol => {\n            const data = baseData[symbol] || { base: 100, change: 0 };\n            const price = data.base + data.change;\n            const open = data.base;\n            const changePercent = (data.change / data.base) * 100;\n            \n            stocks[symbol] = {\n                symbol,\n                price: parseFloat(price.toFixed(2)),\n                open: parseFloat(open.toFixed(2)),\n                high: parseFloat((price + Math.abs(data.change) * 0.5).toFixed(2)),\n                low: parseFloat((price - Math.abs(data.change) * 0.5).toFixed(2)),\n                volume: Math.floor(Math.random() * 50000000) + 10000000,\n                change: parseFloat(data.change.toFixed(2)),\n                changePercent: parseFloat(changePercent.toFixed(2)),\n                source: 'Demo',\n                timestamp: Date.now()\n            };\n        });\n\n        const validStocks = Object.values(stocks);\n        const totalChange = validStocks.reduce((sum, stock) => sum + stock.changePercent, 0);\n        const avgChange = totalChange / validStocks.length;\n\n        return {\n            stocks,\n            marketSentiment: avgChange > 0.5 ? 'Bullish' : avgChange < -0.5 ? 'Bearish' : 'Neutral',\n            avgChange: parseFloat(avgChange.toFixed(2)),\n            successCount: symbols.length,\n            errorCount: 0,\n            demoMode: true,\n            timestamp: Date.now()\n        };\n    }\n\n    // Get options flow data\n    async getOptionsFlowData() {\n        try {\n            console.log('📈 Fetching options flow data from Unusual Whales...');\n            const data = await this.getUnusualWhalesOptionsFlow();\n            return data;\n        } catch (error) {\n            console.error('❌ Failed to fetch options flow data:', error.message);\n            throw error;\n        }\n    }\n\n    // Get technical indicators\n    async getTechnicalIndicators(symbol) {\n        try {\n            const data = await this.getAlphaVantageData(symbol, 'RSI');\n            return data;\n        } catch (error) {\n            console.error(`❌ Failed to fetch technical indicators for ${symbol}:`, error.message);\n            throw error;\n        }\n    }\n\n    // Health check for all APIs\n    async healthCheck() {\n        const services = [\n            { name: 'Polygon', check: () => this.getPolygonStockPrice('AAPL') },\n            { name: 'Twelve Data', check: () => this.getTwelveDataQuote('AAPL') },\n            { name: 'FMP', check: () => this.getFMPQuote('AAPL') },\n            { name: 'Alpha Vantage', check: () => this.getAlphaVantageData('AAPL') }\n        ];\n\n        const results = {};\n\n        for (const service of services) {\n            try {\n                await service.check();\n                results[service.name] = { status: 'OK', timestamp: Date.now() };\n                console.log(`✅ ${service.name} API: OK`);\n            } catch (error) {\n                results[service.name] = { \n                    status: 'ERROR', \n                    error: error.message, \n                    timestamp: Date.now() \n                };\n                console.log(`❌ ${service.name} API: ERROR - ${error.message}`);\n            }\n        }\n\n        return results;\n    }\n}\n\nexport default new RealDataService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}