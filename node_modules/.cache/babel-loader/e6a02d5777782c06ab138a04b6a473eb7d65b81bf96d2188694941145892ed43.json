{"ast":null,"code":"/**\n * Advanced Technical Analysis Engine\n * Comprehensive collection of 20+ technical indicators\n */class TechnicalAnalysis{constructor(){this.indicators={};this.patterns={};}// ==================== MOMENTUM INDICATORS ====================\n/**\n     * Relative Strength Index (RSI)\n     */calculateRSI(prices){let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:14;if(prices.length<period+1)return null;const gains=[];const losses=[];for(let i=1;i<prices.length;i++){const change=prices[i]-prices[i-1];gains.push(change>0?change:0);losses.push(change<0?-change:0);}const avgGain=gains.slice(0,period).reduce((sum,gain)=>sum+gain,0)/period;const avgLoss=losses.slice(0,period).reduce((sum,loss)=>sum+loss,0)/period;if(avgLoss===0)return 100;const rs=avgGain/avgLoss;return 100-100/(1+rs);}/**\n     * Stochastic Oscillator\n     */calculateStochastic(prices,highs,lows){let kPeriod=arguments.length>3&&arguments[3]!==undefined?arguments[3]:14;let dPeriod=arguments.length>4&&arguments[4]!==undefined?arguments[4]:3;if(prices.length<kPeriod)return null;const kValues=[];for(let i=kPeriod-1;i<prices.length;i++){const periodHigh=Math.max(...highs.slice(i-kPeriod+1,i+1));const periodLow=Math.min(...lows.slice(i-kPeriod+1,i+1));const k=(prices[i]-periodLow)/(periodHigh-periodLow)*100;kValues.push(k);}// Calculate %D (SMA of %K)\nconst dValues=[];for(let i=dPeriod-1;i<kValues.length;i++){const d=kValues.slice(i-dPeriod+1,i+1).reduce((sum,k)=>sum+k,0)/dPeriod;dValues.push(d);}return{k:kValues[kValues.length-1],d:dValues[dValues.length-1],signal:kValues[kValues.length-1]>80?'OVERBOUGHT':kValues[kValues.length-1]<20?'OVERSOLD':'NEUTRAL'};}/**\n     * Williams %R\n     */calculateWilliamsR(prices,highs,lows){let period=arguments.length>3&&arguments[3]!==undefined?arguments[3]:14;if(prices.length<period)return null;const periodHigh=Math.max(...highs.slice(-period));const periodLow=Math.min(...lows.slice(-period));const currentPrice=prices[prices.length-1];return(periodHigh-currentPrice)/(periodHigh-periodLow)*-100;}// ==================== TREND INDICATORS ====================\n/**\n     * Moving Average Convergence Divergence (MACD)\n     */calculateMACD(prices){let fastPeriod=arguments.length>1&&arguments[1]!==undefined?arguments[1]:12;let slowPeriod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:26;let signalPeriod=arguments.length>3&&arguments[3]!==undefined?arguments[3]:9;const fastEMA=this.calculateEMA(prices,fastPeriod);const slowEMA=this.calculateEMA(prices,slowPeriod);if(!fastEMA||!slowEMA)return null;const macdLine=fastEMA-slowEMA;// Calculate signal line (EMA of MACD)\nconst macdHistory=[];for(let i=slowPeriod-1;i<prices.length;i++){const fastEmaAtI=this.calculateEMA(prices.slice(0,i+1),fastPeriod);const slowEmaAtI=this.calculateEMA(prices.slice(0,i+1),slowPeriod);macdHistory.push(fastEmaAtI-slowEmaAtI);}const signalLine=this.calculateEMA(macdHistory,signalPeriod);const histogram=macdLine-signalLine;return{macd:macdLine,signal:signalLine,histogram:histogram,crossover:macdLine>signalLine?'BULLISH':'BEARISH'};}/**\n     * Exponential Moving Average (EMA)\n     */calculateEMA(prices,period){if(prices.length<period)return null;const multiplier=2/(period+1);let ema=prices.slice(0,period).reduce((sum,price)=>sum+price,0)/period;for(let i=period;i<prices.length;i++){ema=(prices[i]-ema)*multiplier+ema;}return ema;}/**\n     * Simple Moving Average (SMA)\n     */calculateSMA(prices,period){if(prices.length<period)return null;const sum=prices.slice(-period).reduce((sum,price)=>sum+price,0);return sum/period;}/**\n     * Average Directional Index (ADX)\n     */calculateADX(highs,lows,closes){let period=arguments.length>3&&arguments[3]!==undefined?arguments[3]:14;if(highs.length<period+1)return null;const trueRanges=[];const plusDMs=[];const minusDMs=[];for(let i=1;i<closes.length;i++){// True Range\nconst tr=Math.max(highs[i]-lows[i],Math.abs(highs[i]-closes[i-1]),Math.abs(lows[i]-closes[i-1]));trueRanges.push(tr);// Directional Movement\nconst plusDM=highs[i]-highs[i-1]>lows[i-1]-lows[i]?Math.max(highs[i]-highs[i-1],0):0;const minusDM=lows[i-1]-lows[i]>highs[i]-highs[i-1]?Math.max(lows[i-1]-lows[i],0):0;plusDMs.push(plusDM);minusDMs.push(minusDM);}// Calculate smoothed values\nconst avgTR=trueRanges.slice(-period).reduce((sum,tr)=>sum+tr,0)/period;const avgPlusDM=plusDMs.slice(-period).reduce((sum,dm)=>sum+dm,0)/period;const avgMinusDM=minusDMs.slice(-period).reduce((sum,dm)=>sum+dm,0)/period;const plusDI=avgPlusDM/avgTR*100;const minusDI=avgMinusDM/avgTR*100;const dx=Math.abs(plusDI-minusDI)/(plusDI+minusDI)*100;return{adx:dx,plusDI:plusDI,minusDI:minusDI,trend:dx>25?plusDI>minusDI?'STRONG_UPTREND':'STRONG_DOWNTREND':'WEAK_TREND'};}// ==================== VOLATILITY INDICATORS ====================\n/**\n     * Bollinger Bands\n     */calculateBollingerBands(prices){let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;let stdDev=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2;if(prices.length<period)return null;const sma=this.calculateSMA(prices,period);const variance=prices.slice(-period).reduce((sum,price)=>sum+Math.pow(price-sma,2),0)/period;const standardDeviation=Math.sqrt(variance);const upperBand=sma+standardDeviation*stdDev;const lowerBand=sma-standardDeviation*stdDev;const currentPrice=prices[prices.length-1];return{upper:upperBand,middle:sma,lower:lowerBand,bandwidth:(upperBand-lowerBand)/sma*100,position:(currentPrice-lowerBand)/(upperBand-lowerBand)*100,signal:currentPrice>upperBand?'OVERBOUGHT':currentPrice<lowerBand?'OVERSOLD':'NEUTRAL'};}/**\n     * Average True Range (ATR)\n     */calculateATR(highs,lows,closes){let period=arguments.length>3&&arguments[3]!==undefined?arguments[3]:14;if(highs.length<period+1)return null;const trueRanges=[];for(let i=1;i<closes.length;i++){const tr=Math.max(highs[i]-lows[i],Math.abs(highs[i]-closes[i-1]),Math.abs(lows[i]-closes[i-1]));trueRanges.push(tr);}return trueRanges.slice(-period).reduce((sum,tr)=>sum+tr,0)/period;}// ==================== VOLUME INDICATORS ====================\n/**\n     * Volume Weighted Average Price (VWAP)\n     */calculateVWAP(prices,volumes){if(prices.length!==volumes.length)return null;let totalPriceVolume=0;let totalVolume=0;for(let i=0;i<prices.length;i++){totalPriceVolume+=prices[i]*volumes[i];totalVolume+=volumes[i];}return totalVolume>0?totalPriceVolume/totalVolume:null;}/**\n     * On-Balance Volume (OBV)\n     */calculateOBV(prices,volumes){if(prices.length!==volumes.length||prices.length<2)return null;let obv=0;const obvValues=[0];for(let i=1;i<prices.length;i++){if(prices[i]>prices[i-1]){obv+=volumes[i];}else if(prices[i]<prices[i-1]){obv-=volumes[i];}obvValues.push(obv);}return obvValues[obvValues.length-1];}// ==================== SUPPORT & RESISTANCE ====================\n/**\n     * Fibonacci Retracement Levels\n     */calculateFibonacci(high,low){const range=high-low;return{level_0:high,level_236:high-range*0.236,level_382:high-range*0.382,level_500:high-range*0.500,level_618:high-range*0.618,level_786:high-range*0.786,level_100:low};}/**\n     * Pivot Points\n     */calculatePivotPoints(high,low,close){const pivot=(high+low+close)/3;return{pivot:pivot,r1:2*pivot-low,r2:pivot+(high-low),r3:high+2*(pivot-low),s1:2*pivot-high,s2:pivot-(high-low),s3:low-2*(high-pivot)};}// ==================== PATTERN RECOGNITION ====================\n/**\n     * Detect Candlestick Patterns\n     */detectCandlestickPatterns(ohlcData){if(ohlcData.length<3)return[];const patterns=[];const current=ohlcData[ohlcData.length-1];const previous=ohlcData[ohlcData.length-2];const beforePrevious=ohlcData[ohlcData.length-3];// Doji\nif(Math.abs(current.close-current.open)<(current.high-current.low)*0.1){patterns.push({name:'Doji',type:'REVERSAL',confidence:70,signal:'NEUTRAL'});}// Hammer\nconst bodySize=Math.abs(current.close-current.open);const lowerShadow=current.open<current.close?current.open-current.low:current.close-current.low;const upperShadow=current.high-Math.max(current.open,current.close);if(lowerShadow>bodySize*2&&upperShadow<bodySize*0.5){patterns.push({name:'Hammer',type:'REVERSAL',confidence:75,signal:'BULLISH'});}// Engulfing Pattern\nif(previous.close>previous.open&&current.open<current.close&&current.open<previous.close&&current.close>previous.open){patterns.push({name:'Bullish Engulfing',type:'REVERSAL',confidence:80,signal:'BULLISH'});}return patterns;}/**\n     * Detect Chart Patterns\n     */detectChartPatterns(prices){let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;if(prices.length<period)return[];const patterns=[];const recentPrices=prices.slice(-period);const high=Math.max(...recentPrices);const low=Math.min(...recentPrices);const current=prices[prices.length-1];// Breakout Detection\nconst sma20=this.calculateSMA(prices,20);if(current>high*0.99){patterns.push({name:'Upward Breakout',type:'CONTINUATION',confidence:85,signal:'BULLISH'});}if(current<low*1.01){patterns.push({name:'Downward Breakdown',type:'CONTINUATION',confidence:85,signal:'BEARISH'});}// Triangle Pattern Detection\nconst slope1=this.calculateSlope(recentPrices.slice(0,10));const slope2=this.calculateSlope(recentPrices.slice(10));if(Math.abs(slope1)<0.1&&Math.abs(slope2)<0.1){patterns.push({name:'Symmetrical Triangle',type:'CONTINUATION',confidence:70,signal:'NEUTRAL'});}return patterns;}/**\n     * Calculate slope of price series\n     */calculateSlope(prices){const n=prices.length;const sumX=n*(n-1)/2;const sumY=prices.reduce((sum,price)=>sum+price,0);const sumXY=prices.reduce((sum,price,index)=>sum+index*price,0);const sumX2=n*(n-1)*(2*n-1)/6;return(n*sumXY-sumX*sumY)/(n*sumX2-sumX*sumX);}// ==================== COMPREHENSIVE ANALYSIS ====================\n/**\n     * Perform complete technical analysis on stock data\n     */performCompleteAnalysis(stockData){let historicalData=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const prices=historicalData?historicalData.closes:this.generatePriceHistory(stockData.price);const highs=historicalData?historicalData.highs:this.generatePriceHistory(stockData.high);const lows=historicalData?historicalData.lows:this.generatePriceHistory(stockData.low);const volumes=historicalData?historicalData.volumes:this.generateVolumeHistory(stockData.volume);return{// Momentum Indicators\nrsi:this.calculateRSI(prices),stochastic:this.calculateStochastic(prices,highs,lows),williamsR:this.calculateWilliamsR(prices,highs,lows),// Trend Indicators\nmacd:this.calculateMACD(prices),sma20:this.calculateSMA(prices,20),sma50:this.calculateSMA(prices,50),ema12:this.calculateEMA(prices,12),ema26:this.calculateEMA(prices,26),adx:this.calculateADX(highs,lows,prices),// Volatility Indicators\nbollingerBands:this.calculateBollingerBands(prices),atr:this.calculateATR(highs,lows,prices),// Volume Indicators\nvwap:this.calculateVWAP(prices,volumes),obv:this.calculateOBV(prices,volumes),// Support & Resistance\nfibonacci:this.calculateFibonacci(Math.max(...highs),Math.min(...lows)),pivotPoints:this.calculatePivotPoints(stockData.high,stockData.low,stockData.price),// Pattern Recognition\ncandlestickPatterns:this.detectCandlestickPatterns(this.generateOHLCData(stockData,prices)),chartPatterns:this.detectChartPatterns(prices),// Overall Signal\noverallSignal:this.calculateOverallSignal({rsi:this.calculateRSI(prices),macd:this.calculateMACD(prices),bollingerBands:this.calculateBollingerBands(prices),adx:this.calculateADX(highs,lows,prices)})};}/**\n     * Calculate overall trading signal from multiple indicators\n     */calculateOverallSignal(indicators){let bullishSignals=0;let bearishSignals=0;let totalSignals=0;// RSI Analysis\nif(indicators.rsi){totalSignals++;if(indicators.rsi<30)bullishSignals++;else if(indicators.rsi>70)bearishSignals++;}// MACD Analysis\nif(indicators.macd){totalSignals++;if(indicators.macd.crossover==='BULLISH')bullishSignals++;else if(indicators.macd.crossover==='BEARISH')bearishSignals++;}// Bollinger Bands Analysis\nif(indicators.bollingerBands){totalSignals++;if(indicators.bollingerBands.signal==='OVERSOLD')bullishSignals++;else if(indicators.bollingerBands.signal==='OVERBOUGHT')bearishSignals++;}// ADX Analysis\nif(indicators.adx){totalSignals++;if(indicators.adx.trend==='STRONG_UPTREND')bullishSignals++;else if(indicators.adx.trend==='STRONG_DOWNTREND')bearishSignals++;}const bullishPercentage=bullishSignals/totalSignals*100;const bearishPercentage=bearishSignals/totalSignals*100;return{signal:bullishPercentage>60?'STRONG_BUY':bullishPercentage>40?'BUY':bearishPercentage>60?'STRONG_SELL':bearishPercentage>40?'SELL':'HOLD',confidence:Math.max(bullishPercentage,bearishPercentage),bullishSignals,bearishSignals,totalSignals};}// ==================== HELPER METHODS ====================\ngeneratePriceHistory(currentPrice){let days=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const prices=[];let price=currentPrice*0.95;// Start slightly lower\nfor(let i=0;i<days;i++){price=price*(1+(Math.random()-0.5)*0.03);prices.push(price);}return prices;}generateVolumeHistory(currentVolume){let days=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const volumes=[];let volume=currentVolume;for(let i=0;i<days;i++){volume=Math.max(volume*(1+(Math.random()-0.5)*0.5),100000);volumes.push(Math.floor(volume));}return volumes;}generateOHLCData(stockData,prices){const ohlc=[];for(let i=0;i<Math.min(prices.length,10);i++){const price=prices[i];ohlc.push({open:price*(1+(Math.random()-0.5)*0.02),high:price*(1+Math.random()*0.03),low:price*(1-Math.random()*0.03),close:price});}return ohlc;}}export default new TechnicalAnalysis();","map":{"version":3,"names":["TechnicalAnalysis","constructor","indicators","patterns","calculateRSI","prices","period","arguments","length","undefined","gains","losses","i","change","push","avgGain","slice","reduce","sum","gain","avgLoss","loss","rs","calculateStochastic","highs","lows","kPeriod","dPeriod","kValues","periodHigh","Math","max","periodLow","min","k","dValues","d","signal","calculateWilliamsR","currentPrice","calculateMACD","fastPeriod","slowPeriod","signalPeriod","fastEMA","calculateEMA","slowEMA","macdLine","macdHistory","fastEmaAtI","slowEmaAtI","signalLine","histogram","macd","crossover","multiplier","ema","price","calculateSMA","calculateADX","closes","trueRanges","plusDMs","minusDMs","tr","abs","plusDM","minusDM","avgTR","avgPlusDM","dm","avgMinusDM","plusDI","minusDI","dx","adx","trend","calculateBollingerBands","stdDev","sma","variance","pow","standardDeviation","sqrt","upperBand","lowerBand","upper","middle","lower","bandwidth","position","calculateATR","calculateVWAP","volumes","totalPriceVolume","totalVolume","calculateOBV","obv","obvValues","calculateFibonacci","high","low","range","level_0","level_236","level_382","level_500","level_618","level_786","level_100","calculatePivotPoints","close","pivot","r1","r2","r3","s1","s2","s3","detectCandlestickPatterns","ohlcData","current","previous","beforePrevious","open","name","type","confidence","bodySize","lowerShadow","upperShadow","detectChartPatterns","recentPrices","sma20","slope1","calculateSlope","slope2","n","sumX","sumY","sumXY","index","sumX2","performCompleteAnalysis","stockData","historicalData","generatePriceHistory","generateVolumeHistory","volume","rsi","stochastic","williamsR","sma50","ema12","ema26","bollingerBands","atr","vwap","fibonacci","pivotPoints","candlestickPatterns","generateOHLCData","chartPatterns","overallSignal","calculateOverallSignal","bullishSignals","bearishSignals","totalSignals","bullishPercentage","bearishPercentage","days","random","currentVolume","floor","ohlc"],"sources":["/home/user/webapp/src/services/technicalAnalysis.js"],"sourcesContent":["/**\n * Advanced Technical Analysis Engine\n * Comprehensive collection of 20+ technical indicators\n */\n\nclass TechnicalAnalysis {\n    constructor() {\n        this.indicators = {};\n        this.patterns = {};\n    }\n\n    // ==================== MOMENTUM INDICATORS ====================\n    \n    /**\n     * Relative Strength Index (RSI)\n     */\n    calculateRSI(prices, period = 14) {\n        if (prices.length < period + 1) return null;\n        \n        const gains = [];\n        const losses = [];\n        \n        for (let i = 1; i < prices.length; i++) {\n            const change = prices[i] - prices[i - 1];\n            gains.push(change > 0 ? change : 0);\n            losses.push(change < 0 ? -change : 0);\n        }\n        \n        const avgGain = gains.slice(0, period).reduce((sum, gain) => sum + gain, 0) / period;\n        const avgLoss = losses.slice(0, period).reduce((sum, loss) => sum + loss, 0) / period;\n        \n        if (avgLoss === 0) return 100;\n        const rs = avgGain / avgLoss;\n        return 100 - (100 / (1 + rs));\n    }\n\n    /**\n     * Stochastic Oscillator\n     */\n    calculateStochastic(prices, highs, lows, kPeriod = 14, dPeriod = 3) {\n        if (prices.length < kPeriod) return null;\n        \n        const kValues = [];\n        \n        for (let i = kPeriod - 1; i < prices.length; i++) {\n            const periodHigh = Math.max(...highs.slice(i - kPeriod + 1, i + 1));\n            const periodLow = Math.min(...lows.slice(i - kPeriod + 1, i + 1));\n            \n            const k = ((prices[i] - periodLow) / (periodHigh - periodLow)) * 100;\n            kValues.push(k);\n        }\n        \n        // Calculate %D (SMA of %K)\n        const dValues = [];\n        for (let i = dPeriod - 1; i < kValues.length; i++) {\n            const d = kValues.slice(i - dPeriod + 1, i + 1).reduce((sum, k) => sum + k, 0) / dPeriod;\n            dValues.push(d);\n        }\n        \n        return {\n            k: kValues[kValues.length - 1],\n            d: dValues[dValues.length - 1],\n            signal: kValues[kValues.length - 1] > 80 ? 'OVERBOUGHT' : \n                   kValues[kValues.length - 1] < 20 ? 'OVERSOLD' : 'NEUTRAL'\n        };\n    }\n\n    /**\n     * Williams %R\n     */\n    calculateWilliamsR(prices, highs, lows, period = 14) {\n        if (prices.length < period) return null;\n        \n        const periodHigh = Math.max(...highs.slice(-period));\n        const periodLow = Math.min(...lows.slice(-period));\n        const currentPrice = prices[prices.length - 1];\n        \n        return ((periodHigh - currentPrice) / (periodHigh - periodLow)) * -100;\n    }\n\n    // ==================== TREND INDICATORS ====================\n\n    /**\n     * Moving Average Convergence Divergence (MACD)\n     */\n    calculateMACD(prices, fastPeriod = 12, slowPeriod = 26, signalPeriod = 9) {\n        const fastEMA = this.calculateEMA(prices, fastPeriod);\n        const slowEMA = this.calculateEMA(prices, slowPeriod);\n        \n        if (!fastEMA || !slowEMA) return null;\n        \n        const macdLine = fastEMA - slowEMA;\n        \n        // Calculate signal line (EMA of MACD)\n        const macdHistory = [];\n        for (let i = slowPeriod - 1; i < prices.length; i++) {\n            const fastEmaAtI = this.calculateEMA(prices.slice(0, i + 1), fastPeriod);\n            const slowEmaAtI = this.calculateEMA(prices.slice(0, i + 1), slowPeriod);\n            macdHistory.push(fastEmaAtI - slowEmaAtI);\n        }\n        \n        const signalLine = this.calculateEMA(macdHistory, signalPeriod);\n        const histogram = macdLine - signalLine;\n        \n        return {\n            macd: macdLine,\n            signal: signalLine,\n            histogram: histogram,\n            crossover: macdLine > signalLine ? 'BULLISH' : 'BEARISH'\n        };\n    }\n\n    /**\n     * Exponential Moving Average (EMA)\n     */\n    calculateEMA(prices, period) {\n        if (prices.length < period) return null;\n        \n        const multiplier = 2 / (period + 1);\n        let ema = prices.slice(0, period).reduce((sum, price) => sum + price, 0) / period;\n        \n        for (let i = period; i < prices.length; i++) {\n            ema = (prices[i] - ema) * multiplier + ema;\n        }\n        \n        return ema;\n    }\n\n    /**\n     * Simple Moving Average (SMA)\n     */\n    calculateSMA(prices, period) {\n        if (prices.length < period) return null;\n        const sum = prices.slice(-period).reduce((sum, price) => sum + price, 0);\n        return sum / period;\n    }\n\n    /**\n     * Average Directional Index (ADX)\n     */\n    calculateADX(highs, lows, closes, period = 14) {\n        if (highs.length < period + 1) return null;\n        \n        const trueRanges = [];\n        const plusDMs = [];\n        const minusDMs = [];\n        \n        for (let i = 1; i < closes.length; i++) {\n            // True Range\n            const tr = Math.max(\n                highs[i] - lows[i],\n                Math.abs(highs[i] - closes[i - 1]),\n                Math.abs(lows[i] - closes[i - 1])\n            );\n            trueRanges.push(tr);\n            \n            // Directional Movement\n            const plusDM = highs[i] - highs[i - 1] > lows[i - 1] - lows[i] \n                ? Math.max(highs[i] - highs[i - 1], 0) : 0;\n            const minusDM = lows[i - 1] - lows[i] > highs[i] - highs[i - 1] \n                ? Math.max(lows[i - 1] - lows[i], 0) : 0;\n            \n            plusDMs.push(plusDM);\n            minusDMs.push(minusDM);\n        }\n        \n        // Calculate smoothed values\n        const avgTR = trueRanges.slice(-period).reduce((sum, tr) => sum + tr, 0) / period;\n        const avgPlusDM = plusDMs.slice(-period).reduce((sum, dm) => sum + dm, 0) / period;\n        const avgMinusDM = minusDMs.slice(-period).reduce((sum, dm) => sum + dm, 0) / period;\n        \n        const plusDI = (avgPlusDM / avgTR) * 100;\n        const minusDI = (avgMinusDM / avgTR) * 100;\n        const dx = Math.abs(plusDI - minusDI) / (plusDI + minusDI) * 100;\n        \n        return {\n            adx: dx,\n            plusDI: plusDI,\n            minusDI: minusDI,\n            trend: dx > 25 ? (plusDI > minusDI ? 'STRONG_UPTREND' : 'STRONG_DOWNTREND') : 'WEAK_TREND'\n        };\n    }\n\n    // ==================== VOLATILITY INDICATORS ====================\n\n    /**\n     * Bollinger Bands\n     */\n    calculateBollingerBands(prices, period = 20, stdDev = 2) {\n        if (prices.length < period) return null;\n        \n        const sma = this.calculateSMA(prices, period);\n        const variance = prices.slice(-period)\n            .reduce((sum, price) => sum + Math.pow(price - sma, 2), 0) / period;\n        const standardDeviation = Math.sqrt(variance);\n        \n        const upperBand = sma + (standardDeviation * stdDev);\n        const lowerBand = sma - (standardDeviation * stdDev);\n        const currentPrice = prices[prices.length - 1];\n        \n        return {\n            upper: upperBand,\n            middle: sma,\n            lower: lowerBand,\n            bandwidth: (upperBand - lowerBand) / sma * 100,\n            position: (currentPrice - lowerBand) / (upperBand - lowerBand) * 100,\n            signal: currentPrice > upperBand ? 'OVERBOUGHT' : \n                   currentPrice < lowerBand ? 'OVERSOLD' : 'NEUTRAL'\n        };\n    }\n\n    /**\n     * Average True Range (ATR)\n     */\n    calculateATR(highs, lows, closes, period = 14) {\n        if (highs.length < period + 1) return null;\n        \n        const trueRanges = [];\n        for (let i = 1; i < closes.length; i++) {\n            const tr = Math.max(\n                highs[i] - lows[i],\n                Math.abs(highs[i] - closes[i - 1]),\n                Math.abs(lows[i] - closes[i - 1])\n            );\n            trueRanges.push(tr);\n        }\n        \n        return trueRanges.slice(-period).reduce((sum, tr) => sum + tr, 0) / period;\n    }\n\n    // ==================== VOLUME INDICATORS ====================\n\n    /**\n     * Volume Weighted Average Price (VWAP)\n     */\n    calculateVWAP(prices, volumes) {\n        if (prices.length !== volumes.length) return null;\n        \n        let totalPriceVolume = 0;\n        let totalVolume = 0;\n        \n        for (let i = 0; i < prices.length; i++) {\n            totalPriceVolume += prices[i] * volumes[i];\n            totalVolume += volumes[i];\n        }\n        \n        return totalVolume > 0 ? totalPriceVolume / totalVolume : null;\n    }\n\n    /**\n     * On-Balance Volume (OBV)\n     */\n    calculateOBV(prices, volumes) {\n        if (prices.length !== volumes.length || prices.length < 2) return null;\n        \n        let obv = 0;\n        const obvValues = [0];\n        \n        for (let i = 1; i < prices.length; i++) {\n            if (prices[i] > prices[i - 1]) {\n                obv += volumes[i];\n            } else if (prices[i] < prices[i - 1]) {\n                obv -= volumes[i];\n            }\n            obvValues.push(obv);\n        }\n        \n        return obvValues[obvValues.length - 1];\n    }\n\n    // ==================== SUPPORT & RESISTANCE ====================\n\n    /**\n     * Fibonacci Retracement Levels\n     */\n    calculateFibonacci(high, low) {\n        const range = high - low;\n        \n        return {\n            level_0: high,\n            level_236: high - (range * 0.236),\n            level_382: high - (range * 0.382),\n            level_500: high - (range * 0.500),\n            level_618: high - (range * 0.618),\n            level_786: high - (range * 0.786),\n            level_100: low\n        };\n    }\n\n    /**\n     * Pivot Points\n     */\n    calculatePivotPoints(high, low, close) {\n        const pivot = (high + low + close) / 3;\n        \n        return {\n            pivot: pivot,\n            r1: 2 * pivot - low,\n            r2: pivot + (high - low),\n            r3: high + 2 * (pivot - low),\n            s1: 2 * pivot - high,\n            s2: pivot - (high - low),\n            s3: low - 2 * (high - pivot)\n        };\n    }\n\n    // ==================== PATTERN RECOGNITION ====================\n\n    /**\n     * Detect Candlestick Patterns\n     */\n    detectCandlestickPatterns(ohlcData) {\n        if (ohlcData.length < 3) return [];\n        \n        const patterns = [];\n        const current = ohlcData[ohlcData.length - 1];\n        const previous = ohlcData[ohlcData.length - 2];\n        const beforePrevious = ohlcData[ohlcData.length - 3];\n        \n        // Doji\n        if (Math.abs(current.close - current.open) < (current.high - current.low) * 0.1) {\n            patterns.push({\n                name: 'Doji',\n                type: 'REVERSAL',\n                confidence: 70,\n                signal: 'NEUTRAL'\n            });\n        }\n        \n        // Hammer\n        const bodySize = Math.abs(current.close - current.open);\n        const lowerShadow = current.open < current.close ? \n            current.open - current.low : current.close - current.low;\n        const upperShadow = current.high - Math.max(current.open, current.close);\n        \n        if (lowerShadow > bodySize * 2 && upperShadow < bodySize * 0.5) {\n            patterns.push({\n                name: 'Hammer',\n                type: 'REVERSAL',\n                confidence: 75,\n                signal: 'BULLISH'\n            });\n        }\n        \n        // Engulfing Pattern\n        if (previous.close > previous.open && current.open < current.close &&\n            current.open < previous.close && current.close > previous.open) {\n            patterns.push({\n                name: 'Bullish Engulfing',\n                type: 'REVERSAL',\n                confidence: 80,\n                signal: 'BULLISH'\n            });\n        }\n        \n        return patterns;\n    }\n\n    /**\n     * Detect Chart Patterns\n     */\n    detectChartPatterns(prices, period = 20) {\n        if (prices.length < period) return [];\n        \n        const patterns = [];\n        const recentPrices = prices.slice(-period);\n        const high = Math.max(...recentPrices);\n        const low = Math.min(...recentPrices);\n        const current = prices[prices.length - 1];\n        \n        // Breakout Detection\n        const sma20 = this.calculateSMA(prices, 20);\n        if (current > high * 0.99) {\n            patterns.push({\n                name: 'Upward Breakout',\n                type: 'CONTINUATION',\n                confidence: 85,\n                signal: 'BULLISH'\n            });\n        }\n        \n        if (current < low * 1.01) {\n            patterns.push({\n                name: 'Downward Breakdown',\n                type: 'CONTINUATION',\n                confidence: 85,\n                signal: 'BEARISH'\n            });\n        }\n        \n        // Triangle Pattern Detection\n        const slope1 = this.calculateSlope(recentPrices.slice(0, 10));\n        const slope2 = this.calculateSlope(recentPrices.slice(10));\n        \n        if (Math.abs(slope1) < 0.1 && Math.abs(slope2) < 0.1) {\n            patterns.push({\n                name: 'Symmetrical Triangle',\n                type: 'CONTINUATION',\n                confidence: 70,\n                signal: 'NEUTRAL'\n            });\n        }\n        \n        return patterns;\n    }\n\n    /**\n     * Calculate slope of price series\n     */\n    calculateSlope(prices) {\n        const n = prices.length;\n        const sumX = n * (n - 1) / 2;\n        const sumY = prices.reduce((sum, price) => sum + price, 0);\n        const sumXY = prices.reduce((sum, price, index) => sum + index * price, 0);\n        const sumX2 = n * (n - 1) * (2 * n - 1) / 6;\n        \n        return (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n    }\n\n    // ==================== COMPREHENSIVE ANALYSIS ====================\n\n    /**\n     * Perform complete technical analysis on stock data\n     */\n    performCompleteAnalysis(stockData, historicalData = null) {\n        const prices = historicalData ? historicalData.closes : this.generatePriceHistory(stockData.price);\n        const highs = historicalData ? historicalData.highs : this.generatePriceHistory(stockData.high);\n        const lows = historicalData ? historicalData.lows : this.generatePriceHistory(stockData.low);\n        const volumes = historicalData ? historicalData.volumes : this.generateVolumeHistory(stockData.volume);\n        \n        return {\n            // Momentum Indicators\n            rsi: this.calculateRSI(prices),\n            stochastic: this.calculateStochastic(prices, highs, lows),\n            williamsR: this.calculateWilliamsR(prices, highs, lows),\n            \n            // Trend Indicators\n            macd: this.calculateMACD(prices),\n            sma20: this.calculateSMA(prices, 20),\n            sma50: this.calculateSMA(prices, 50),\n            ema12: this.calculateEMA(prices, 12),\n            ema26: this.calculateEMA(prices, 26),\n            adx: this.calculateADX(highs, lows, prices),\n            \n            // Volatility Indicators\n            bollingerBands: this.calculateBollingerBands(prices),\n            atr: this.calculateATR(highs, lows, prices),\n            \n            // Volume Indicators\n            vwap: this.calculateVWAP(prices, volumes),\n            obv: this.calculateOBV(prices, volumes),\n            \n            // Support & Resistance\n            fibonacci: this.calculateFibonacci(Math.max(...highs), Math.min(...lows)),\n            pivotPoints: this.calculatePivotPoints(stockData.high, stockData.low, stockData.price),\n            \n            // Pattern Recognition\n            candlestickPatterns: this.detectCandlestickPatterns(this.generateOHLCData(stockData, prices)),\n            chartPatterns: this.detectChartPatterns(prices),\n            \n            // Overall Signal\n            overallSignal: this.calculateOverallSignal({\n                rsi: this.calculateRSI(prices),\n                macd: this.calculateMACD(prices),\n                bollingerBands: this.calculateBollingerBands(prices),\n                adx: this.calculateADX(highs, lows, prices)\n            })\n        };\n    }\n\n    /**\n     * Calculate overall trading signal from multiple indicators\n     */\n    calculateOverallSignal(indicators) {\n        let bullishSignals = 0;\n        let bearishSignals = 0;\n        let totalSignals = 0;\n        \n        // RSI Analysis\n        if (indicators.rsi) {\n            totalSignals++;\n            if (indicators.rsi < 30) bullishSignals++;\n            else if (indicators.rsi > 70) bearishSignals++;\n        }\n        \n        // MACD Analysis\n        if (indicators.macd) {\n            totalSignals++;\n            if (indicators.macd.crossover === 'BULLISH') bullishSignals++;\n            else if (indicators.macd.crossover === 'BEARISH') bearishSignals++;\n        }\n        \n        // Bollinger Bands Analysis\n        if (indicators.bollingerBands) {\n            totalSignals++;\n            if (indicators.bollingerBands.signal === 'OVERSOLD') bullishSignals++;\n            else if (indicators.bollingerBands.signal === 'OVERBOUGHT') bearishSignals++;\n        }\n        \n        // ADX Analysis\n        if (indicators.adx) {\n            totalSignals++;\n            if (indicators.adx.trend === 'STRONG_UPTREND') bullishSignals++;\n            else if (indicators.adx.trend === 'STRONG_DOWNTREND') bearishSignals++;\n        }\n        \n        const bullishPercentage = (bullishSignals / totalSignals) * 100;\n        const bearishPercentage = (bearishSignals / totalSignals) * 100;\n        \n        return {\n            signal: bullishPercentage > 60 ? 'STRONG_BUY' :\n                   bullishPercentage > 40 ? 'BUY' :\n                   bearishPercentage > 60 ? 'STRONG_SELL' :\n                   bearishPercentage > 40 ? 'SELL' : 'HOLD',\n            confidence: Math.max(bullishPercentage, bearishPercentage),\n            bullishSignals,\n            bearishSignals,\n            totalSignals\n        };\n    }\n\n    // ==================== HELPER METHODS ====================\n\n    generatePriceHistory(currentPrice, days = 50) {\n        const prices = [];\n        let price = currentPrice * 0.95; // Start slightly lower\n        \n        for (let i = 0; i < days; i++) {\n            price = price * (1 + (Math.random() - 0.5) * 0.03);\n            prices.push(price);\n        }\n        \n        return prices;\n    }\n\n    generateVolumeHistory(currentVolume, days = 50) {\n        const volumes = [];\n        let volume = currentVolume;\n        \n        for (let i = 0; i < days; i++) {\n            volume = Math.max(volume * (1 + (Math.random() - 0.5) * 0.5), 100000);\n            volumes.push(Math.floor(volume));\n        }\n        \n        return volumes;\n    }\n\n    generateOHLCData(stockData, prices) {\n        const ohlc = [];\n        for (let i = 0; i < Math.min(prices.length, 10); i++) {\n            const price = prices[i];\n            ohlc.push({\n                open: price * (1 + (Math.random() - 0.5) * 0.02),\n                high: price * (1 + Math.random() * 0.03),\n                low: price * (1 - Math.random() * 0.03),\n                close: price\n            });\n        }\n        return ohlc;\n    }\n}\n\nexport default new TechnicalAnalysis();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}