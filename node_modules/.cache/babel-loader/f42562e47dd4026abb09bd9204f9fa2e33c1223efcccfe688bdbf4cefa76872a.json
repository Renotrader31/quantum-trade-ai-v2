{"ast":null,"code":"import _objectSpread from\"/home/user/webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{Brain,TrendingUp,Activity,Shield,Zap,DollarSign,Target,AlertCircle,BarChart3,Sparkles,ArrowUpRight,ArrowDownRight,ChevronRight,RefreshCw,Award,Flame,LineChart,Clock,TrendingDown,Calendar,PieChart,BarChart2}from'lucide-react';import apiService from'../services/apiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MLTradingDashboard=()=>{var _performance$avgRetur,_performance$sharpeRa,_performance$profitFa,_performance$activeTr,_performance$strategi,_performance$patterns,_performance$activeTr2;const[mlSystem,setMlSystem]=useState(null);const[recommendations,setRecommendations]=useState([]);const[performance,setPerformance]=useState(null);const[isLoading,setIsLoading]=useState(true);const[activeView,setActiveView]=useState('dashboard');const[selectedSymbol,setSelectedSymbol]=useState('SPY');const[tradeForm,setTradeForm]=useState({symbol:'',action:'buy',price:'',quantity:'',strategy:''});const[marketData,setMarketData]=useState({});useEffect(()=>{const initializeML=async()=>{try{const{default:MLTradingSystem}=await import('../services/MLTradingSystem');const system=new MLTradingSystem();setMlSystem(system);// Generate initial recommendations with real data\nconst data=await getRealMarketData();setMarketData(data);const recs=system.generateRecommendations(data);setRecommendations(recs);// Get performance metrics\nconst perf=system.getPerformanceMetrics();setPerformance(perf);setIsLoading(false);// Set up auto-refresh with real data\nconst interval=setInterval(async()=>{const refreshedData=await getRealMarketData();const newRecs=system.generateRecommendations(refreshedData);setRecommendations(newRecs);setPerformance(system.getPerformanceMetrics());},30000);// Update every 30 seconds\nreturn()=>clearInterval(interval);}catch(error){console.error('Failed to initialize ML system:',error);setIsLoading(false);}};initializeML();},[]);const getRealMarketData=async()=>{try{console.log('Fetching real market data...');const marketOverview=await apiService.getMarketOverview();console.log('Market data received:',marketOverview);// Format for ML system\nconst formattedData={};Object.keys(marketOverview.stocks).forEach(symbol=>{const stockData=marketOverview.stocks[symbol];formattedData[symbol]=_objectSpread(_objectSpread({},stockData),{},{currentPrice:stockData.price,prices:Array(50).fill(stockData.price).map((p,i)=>p+(Math.random()-0.5)*2),// Generate price history\nhighs:Array(50).fill(stockData.high),lows:Array(50).fill(stockData.low),vwap:stockData.price,avgVolume:stockData.volume,callVolume:Math.floor(Math.random()*100000),putVolume:Math.floor(Math.random()*100000),unusualActivity:Math.random()>0.7,socialSentiment:Math.random()-0.5,newsSentiment:Math.random()-0.5,marketCap:Math.floor(Math.random()*1000000000000),sectorStrength:Math.random(),correlationSPY:Math.random()});});return formattedData;}catch(error){console.log('Using fallback data:',error);// Fallback data\nconst symbols=['SPY','QQQ','AAPL','NVDA','TSLA'];const data={};symbols.forEach(symbol=>{const mockData=apiService.generateMockData(symbol);data[symbol]=_objectSpread(_objectSpread({},mockData),{},{currentPrice:mockData.price,prices:Array(50).fill(mockData.price).map((p,i)=>p+(Math.random()-0.5)*2),highs:Array(50).fill(mockData.high),lows:Array(50).fill(mockData.low),vwap:mockData.price,avgVolume:mockData.volume,callVolume:Math.floor(Math.random()*100000),putVolume:Math.floor(Math.random()*100000),unusualActivity:Math.random()>0.7,socialSentiment:Math.random()-0.5,newsSentiment:Math.random()-0.5,marketCap:Math.floor(Math.random()*1000000000000),sectorStrength:Math.random(),correlationSPY:Math.random()});});return data;}};const handleRecordTrade=useCallback(()=>{if(!mlSystem)return;const trade={id:Date.now(),symbol:tradeForm.symbol,action:tradeForm.action,price:parseFloat(tradeForm.price),quantity:parseInt(tradeForm.quantity),strategy:tradeForm.strategy,status:'open',entryTime:Date.now(),entryMarketData:marketData[tradeForm.symbol]};mlSystem.recordTrade(trade);// Reset form\nsetTradeForm({symbol:'',action:'buy',price:'',quantity:'',strategy:''});// Update performance\nsetPerformance(mlSystem.getPerformanceMetrics());alert('Trade recorded successfully!');},[mlSystem,tradeForm,marketData]);const handleCloseTrade=useCallback((tradeId,exitPrice)=>{if(!mlSystem)return;const trade=mlSystem.activeTrades.find(t=>t.id===tradeId);if(!trade)return;const closedTrade=_objectSpread(_objectSpread({},trade),{},{status:'closed',exitTime:Date.now(),exitPrice:exitPrice,profit:(exitPrice-trade.price)*trade.quantity*(trade.action==='buy'?1:-1),percentReturn:(exitPrice-trade.price)/trade.price*100*(trade.action==='buy'?1:-1)});mlSystem.recordTrade(closedTrade);setPerformance(mlSystem.getPerformanceMetrics());},[mlSystem]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-screen bg-gray-900\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Brain,{className:\"w-16 h-16 text-blue-500 animate-pulse mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl text-white\",children:\"Initializing ML Trading System...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-400 mt-2\",children:\"Loading neural networks and training data\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-white p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-800 rounded-lg p-6 mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsx(Brain,{className:\"w-10 h-10 text-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold\",children:\"ML Trading System\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400\",children:\"Self-improving AI-powered trading\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveView('dashboard'),className:\"px-4 py-2 rounded \".concat(activeView==='dashboard'?'bg-blue-600':'bg-gray-700'),children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveView('recommendations'),className:\"px-4 py-2 rounded \".concat(activeView==='recommendations'?'bg-blue-600':'bg-gray-700'),children:\"AI Recommendations\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveView('record'),className:\"px-4 py-2 rounded \".concat(activeView==='record'?'bg-blue-600':'bg-gray-700'),children:\"Record Trade\"})]})]})}),performance&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-900 to-blue-800 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(Brain,{className:\"w-6 h-6 text-blue-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-blue-300\",children:\"ML MODEL\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold\",children:[(performance.modelAccuracy*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-blue-300\",children:\"Accuracy\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[performance.totalTrades,\" trades analyzed\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-green-900 to-green-800 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"w-6 h-6 text-green-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-green-300\",children:\"WIN RATE\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold\",children:[(performance.winRate*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-green-300\",children:\"Success Rate\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[\"Avg Return: \",(_performance$avgRetur=performance.avgReturn)===null||_performance$avgRetur===void 0?void 0:_performance$avgRetur.toFixed(2),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-purple-900 to-purple-800 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(Shield,{className:\"w-6 h-6 text-purple-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-purple-300\",children:\"RISK METRICS\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold\",children:(_performance$sharpeRa=performance.sharpeRatio)===null||_performance$sharpeRa===void 0?void 0:_performance$sharpeRa.toFixed(2)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-purple-300\",children:\"Sharpe Ratio\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[\"Max DD: \",(performance.maxDrawdown*100).toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-yellow-900 to-yellow-800 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(Zap,{className:\"w-6 h-6 text-yellow-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-yellow-300\",children:\"PROFIT FACTOR\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold\",children:(_performance$profitFa=performance.profitFactor)===null||_performance$profitFa===void 0?void 0:_performance$profitFa.toFixed(2)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-yellow-300\",children:\"Risk/Reward\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[((_performance$activeTr=performance.activeTrades)===null||_performance$activeTr===void 0?void 0:_performance$activeTr.length)||0,\" active trades\"]})]})]}),marketData&&Object.keys(marketData).length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-6\",children:['SPY','QQQ','AAPL','NVDA','TSLA'].map(symbol=>{const data=marketData[symbol];if(!data)return null;const price=data.currentPrice||data.price||0;const change=data.changePercent||data.change||0;const volume=data.volume||0;const isPositive=change>0;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-bold\",children:symbol}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs px-2 py-1 rounded \".concat(isPositive?'bg-green-900 text-green-400':'bg-red-900 text-red-400'),children:[isPositive?'+':'',Math.abs(change).toFixed(2),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold\",children:[\"$\",price>0?price.toFixed(2):'---']}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[\"Vol: \",volume>0?(volume/1000000).toFixed(1)+'M':'N/A']})]},symbol);})}),activeView==='dashboard'&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-bold mb-4 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Award,{className:\"w-5 h-5 text-yellow-500\"}),\"Top Performing Strategies\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:performance===null||performance===void 0?void 0:(_performance$strategi=performance.strategies)===null||_performance$strategi===void 0?void 0:_performance$strategi.slice(0,5).map((strategy,idx)=>{var _strategy$avgReturn,_strategy$sharpeRatio;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700 rounded p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:strategy.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-400\",children:[strategy.trades,\" trades\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-green-400 font-bold\",children:[(strategy.winRate*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400\",children:\"Win Rate\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 flex justify-between text-xs\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Avg Return: \",(_strategy$avgReturn=strategy.avgReturn)===null||_strategy$avgReturn===void 0?void 0:_strategy$avgReturn.toFixed(2),\"%\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Sharpe: \",(_strategy$sharpeRatio=strategy.sharpeRatio)===null||_strategy$sharpeRatio===void 0?void 0:_strategy$sharpeRatio.toFixed(2)]})]})]},idx);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-bold mb-4 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"w-5 h-5 text-purple-500\"}),\"Most Successful Patterns\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:performance===null||performance===void 0?void 0:(_performance$patterns=performance.patterns)===null||_performance$patterns===void 0?void 0:_performance$patterns.slice(0,5).map((pattern,idx)=>{var _pattern$totalReturn;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700 rounded p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold capitalize\",children:pattern.name.replace(/_/g,' ')}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-400\",children:[pattern.occurrences,\" occurrences\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-blue-400 font-bold\",children:[(pattern.successRate*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400\",children:\"Success Rate\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-xs text-gray-400\",children:[\"Total Return: \",(_pattern$totalReturn=pattern.totalReturn)===null||_pattern$totalReturn===void 0?void 0:_pattern$totalReturn.toFixed(2),\"%\"]})]},idx);})})]})]}),activeView==='recommendations'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-bold mb-4 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Sparkles,{className:\"w-5 h-5 text-yellow-500\"}),\"AI-Generated Trading Recommendations\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",children:recommendations.map((rec,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700 rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xl font-bold\",children:rec.symbol}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-semibold \".concat(rec.action.includes('buy')?'text-green-400':rec.action.includes('sell')?'text-red-400':'text-yellow-400'),children:rec.action.toUpperCase()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-bold\",children:[(rec.confidence*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400\",children:\"Confidence\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Expected Return:\"}),/*#__PURE__*/_jsxs(\"span\",{className:rec.expectedReturn>0?'text-green-400':'text-red-400',children:[rec.expectedReturn.toFixed(2),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Risk Level:\"}),/*#__PURE__*/_jsxs(\"span\",{className:rec.risk<0.3?'text-green-400':rec.risk<0.6?'text-yellow-400':'text-red-400',children:[(rec.risk*100).toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Pattern:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-400 capitalize\",children:rec.pattern.replace(/_/g,' ')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Entry:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",rec.entryPrice.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Stop Loss:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-400\",children:[\"$\",rec.stopLoss.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Take Profit:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-green-400\",children:[\"$\",rec.takeProfit.toFixed(2)]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 p-2 bg-gray-800 rounded text-xs text-gray-300\",children:rec.reasoning}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-3 w-full bg-blue-600 hover:bg-blue-700 py-2 rounded text-sm font-semibold transition-colors\",children:\"Execute Trade\"})]},idx))})]})}),activeView==='record'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Record Trade for ML Training\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 max-w-2xl\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-400 mb-1\",children:\"Symbol\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:tradeForm.symbol,onChange:e=>setTradeForm(_objectSpread(_objectSpread({},tradeForm),{},{symbol:e.target.value.toUpperCase()})),className:\"w-full bg-gray-700 rounded px-3 py-2 text-white\",placeholder:\"AAPL\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-400 mb-1\",children:\"Action\"}),/*#__PURE__*/_jsxs(\"select\",{value:tradeForm.action,onChange:e=>setTradeForm(_objectSpread(_objectSpread({},tradeForm),{},{action:e.target.value})),className:\"w-full bg-gray-700 rounded px-3 py-2 text-white\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"buy\",children:\"Buy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"sell\",children:\"Sell\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-400 mb-1\",children:\"Price\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tradeForm.price,onChange:e=>setTradeForm(_objectSpread(_objectSpread({},tradeForm),{},{price:e.target.value})),className:\"w-full bg-gray-700 rounded px-3 py-2 text-white\",placeholder:\"150.00\",step:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-400 mb-1\",children:\"Quantity\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tradeForm.quantity,onChange:e=>setTradeForm(_objectSpread(_objectSpread({},tradeForm),{},{quantity:e.target.value})),className:\"w-full bg-gray-700 rounded px-3 py-2 text-white\",placeholder:\"100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"md:col-span-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-400 mb-1\",children:\"Strategy\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:tradeForm.strategy,onChange:e=>setTradeForm(_objectSpread(_objectSpread({},tradeForm),{},{strategy:e.target.value})),className:\"w-full bg-gray-700 rounded px-3 py-2 text-white\",placeholder:\"e.g., momentum, mean_reversion, breakout\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"md:col-span-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleRecordTrade,className:\"bg-blue-600 hover:bg-blue-700 px-6 py-2 rounded font-semibold transition-colors\",children:\"Record Trade\"})})]}),(performance===null||performance===void 0?void 0:(_performance$activeTr2=performance.activeTrades)===null||_performance$activeTr2===void 0?void 0:_performance$activeTr2.length)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold mb-4\",children:\"Active Trades\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:performance.activeTrades.map(trade=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700 rounded p-3 flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:trade.symbol}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-sm text-gray-400\",children:[trade.action,\" @ $\",trade.price]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const exitPrice=prompt('Enter exit price:');if(exitPrice){handleCloseTrade(trade.id,parseFloat(exitPrice));}},className:\"bg-red-600 hover:bg-red-700 px-3 py-1 rounded text-sm\",children:\"Close Trade\"})]},trade.id))})]})]})]})});};export default MLTradingDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Brain","TrendingUp","Activity","Shield","Zap","DollarSign","Target","AlertCircle","BarChart3","Sparkles","ArrowUpRight","ArrowDownRight","ChevronRight","RefreshCw","Award","Flame","LineChart","Clock","TrendingDown","Calendar","PieChart","BarChart2","apiService","jsx","_jsx","jsxs","_jsxs","MLTradingDashboard","_performance$avgRetur","_performance$sharpeRa","_performance$profitFa","_performance$activeTr","_performance$strategi","_performance$patterns","_performance$activeTr2","mlSystem","setMlSystem","recommendations","setRecommendations","performance","setPerformance","isLoading","setIsLoading","activeView","setActiveView","selectedSymbol","setSelectedSymbol","tradeForm","setTradeForm","symbol","action","price","quantity","strategy","marketData","setMarketData","initializeML","default","MLTradingSystem","system","data","getRealMarketData","recs","generateRecommendations","perf","getPerformanceMetrics","interval","setInterval","refreshedData","newRecs","clearInterval","error","console","log","marketOverview","getMarketOverview","formattedData","Object","keys","stocks","forEach","stockData","_objectSpread","currentPrice","prices","Array","fill","map","p","i","Math","random","highs","high","lows","low","vwap","avgVolume","volume","callVolume","floor","putVolume","unusualActivity","socialSentiment","newsSentiment","marketCap","sectorStrength","correlationSPY","symbols","mockData","generateMockData","handleRecordTrade","trade","id","Date","now","parseFloat","parseInt","status","entryTime","entryMarketData","recordTrade","alert","handleCloseTrade","tradeId","exitPrice","activeTrades","find","t","closedTrade","exitTime","profit","percentReturn","className","children","onClick","concat","modelAccuracy","toFixed","totalTrades","winRate","avgReturn","sharpeRatio","maxDrawdown","profitFactor","length","change","changePercent","isPositive","abs","strategies","slice","idx","_strategy$avgReturn","_strategy$sharpeRatio","name","trades","patterns","pattern","_pattern$totalReturn","replace","occurrences","successRate","totalReturn","rec","includes","toUpperCase","confidence","expectedReturn","risk","entryPrice","stopLoss","takeProfit","reasoning","type","value","onChange","e","target","placeholder","step","prompt"],"sources":["/home/user/webapp/src/components/MLTradingDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n    Brain, TrendingUp, Activity, Shield, Zap,\n    DollarSign, Target, AlertCircle, BarChart3, Sparkles,\n    ArrowUpRight, ArrowDownRight, ChevronRight,\n    RefreshCw, Award, Flame, LineChart, Clock,\n    TrendingDown, Calendar, PieChart, BarChart2\n} from 'lucide-react';\nimport apiService from '../services/apiService';\n\nconst MLTradingDashboard = () => {\n    const [mlSystem, setMlSystem] = useState(null);\n    const [recommendations, setRecommendations] = useState([]);\n    const [performance, setPerformance] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [activeView, setActiveView] = useState('dashboard');\n    const [selectedSymbol, setSelectedSymbol] = useState('SPY');\n    const [tradeForm, setTradeForm] = useState({\n        symbol: '',\n        action: 'buy',\n        price: '',\n        quantity: '',\n        strategy: ''\n    });\n    const [marketData, setMarketData] = useState({});\n\n    useEffect(() => {\n        const initializeML = async () => {\n            try {\n                const { default: MLTradingSystem } = await import('../services/MLTradingSystem');\n                const system = new MLTradingSystem();\n                setMlSystem(system);\n                \n                // Generate initial recommendations with real data\n                const data = await getRealMarketData();\n                setMarketData(data);\n                const recs = system.generateRecommendations(data);\n                setRecommendations(recs);\n                \n                // Get performance metrics\n                const perf = system.getPerformanceMetrics();\n                setPerformance(perf);\n                \n                setIsLoading(false);\n                \n                // Set up auto-refresh with real data\n                const interval = setInterval(async () => {\n                    const refreshedData = await getRealMarketData();\n                    const newRecs = system.generateRecommendations(refreshedData);\n                    setRecommendations(newRecs);\n                    setPerformance(system.getPerformanceMetrics());\n                }, 30000); // Update every 30 seconds\n                \n                return () => clearInterval(interval);\n            } catch (error) {\n                console.error('Failed to initialize ML system:', error);\n                setIsLoading(false);\n            }\n        };\n        \n        initializeML();\n    }, []);\n\n    const getRealMarketData = async () => {\n        try {\n            console.log('Fetching real market data...');\n            const marketOverview = await apiService.getMarketOverview();\n            console.log('Market data received:', marketOverview);\n            \n            // Format for ML system\n            const formattedData = {};\n            Object.keys(marketOverview.stocks).forEach(symbol => {\n                const stockData = marketOverview.stocks[symbol];\n                formattedData[symbol] = {\n                    ...stockData,\n                    currentPrice: stockData.price,\n                    prices: Array(50).fill(stockData.price).map((p, i) => \n                        p + (Math.random() - 0.5) * 2\n                    ), // Generate price history\n                    highs: Array(50).fill(stockData.high),\n                    lows: Array(50).fill(stockData.low),\n                    vwap: stockData.price,\n                    avgVolume: stockData.volume,\n                    callVolume: Math.floor(Math.random() * 100000),\n                    putVolume: Math.floor(Math.random() * 100000),\n                    unusualActivity: Math.random() > 0.7,\n                    socialSentiment: Math.random() - 0.5,\n                    newsSentiment: Math.random() - 0.5,\n                    marketCap: Math.floor(Math.random() * 1000000000000),\n                    sectorStrength: Math.random(),\n                    correlationSPY: Math.random()\n                };\n            });\n            \n            return formattedData;\n        } catch (error) {\n            console.log('Using fallback data:', error);\n            // Fallback data\n            const symbols = ['SPY', 'QQQ', 'AAPL', 'NVDA', 'TSLA'];\n            const data = {};\n            \n            symbols.forEach(symbol => {\n                const mockData = apiService.generateMockData(symbol);\n                data[symbol] = {\n                    ...mockData,\n                    currentPrice: mockData.price,\n                    prices: Array(50).fill(mockData.price).map((p, i) => \n                        p + (Math.random() - 0.5) * 2\n                    ),\n                    highs: Array(50).fill(mockData.high),\n                    lows: Array(50).fill(mockData.low),\n                    vwap: mockData.price,\n                    avgVolume: mockData.volume,\n                    callVolume: Math.floor(Math.random() * 100000),\n                    putVolume: Math.floor(Math.random() * 100000),\n                    unusualActivity: Math.random() > 0.7,\n                    socialSentiment: Math.random() - 0.5,\n                    newsSentiment: Math.random() - 0.5,\n                    marketCap: Math.floor(Math.random() * 1000000000000),\n                    sectorStrength: Math.random(),\n                    correlationSPY: Math.random()\n                };\n            });\n            \n            return data;\n        }\n    };\n\n    const handleRecordTrade = useCallback(() => {\n        if (!mlSystem) return;\n        \n        const trade = {\n            id: Date.now(),\n            symbol: tradeForm.symbol,\n            action: tradeForm.action,\n            price: parseFloat(tradeForm.price),\n            quantity: parseInt(tradeForm.quantity),\n            strategy: tradeForm.strategy,\n            status: 'open',\n            entryTime: Date.now(),\n            entryMarketData: marketData[tradeForm.symbol]\n        };\n        \n        mlSystem.recordTrade(trade);\n        \n        // Reset form\n        setTradeForm({\n            symbol: '',\n            action: 'buy',\n            price: '',\n            quantity: '',\n            strategy: ''\n        });\n        \n        // Update performance\n        setPerformance(mlSystem.getPerformanceMetrics());\n        \n        alert('Trade recorded successfully!');\n    }, [mlSystem, tradeForm, marketData]);\n\n    const handleCloseTrade = useCallback((tradeId, exitPrice) => {\n        if (!mlSystem) return;\n        \n        const trade = mlSystem.activeTrades.find(t => t.id === tradeId);\n        if (!trade) return;\n        \n        const closedTrade = {\n            ...trade,\n            status: 'closed',\n            exitTime: Date.now(),\n            exitPrice: exitPrice,\n            profit: (exitPrice - trade.price) * trade.quantity * (trade.action === 'buy' ? 1 : -1),\n            percentReturn: ((exitPrice - trade.price) / trade.price) * 100 * (trade.action === 'buy' ? 1 : -1)\n        };\n        \n        mlSystem.recordTrade(closedTrade);\n        setPerformance(mlSystem.getPerformanceMetrics());\n    }, [mlSystem]);\n\n    if (isLoading) {\n        return (\n            <div className=\"flex items-center justify-center h-screen bg-gray-900\">\n                <div className=\"text-center\">\n                    <Brain className=\"w-16 h-16 text-blue-500 animate-pulse mx-auto mb-4\" />\n                    <div className=\"text-xl text-white\">Initializing ML Trading System...</div>\n                    <div className=\"text-sm text-gray-400 mt-2\">Loading neural networks and training data</div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gray-900 text-white p-4\">\n            <div className=\"max-w-7xl mx-auto\">\n                {/* Header */}\n                <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n                    <div className=\"flex justify-between items-center\">\n                        <div className=\"flex items-center gap-4\">\n                            <Brain className=\"w-10 h-10 text-blue-500\" />\n                            <div>\n                                <h1 className=\"text-3xl font-bold\">ML Trading System</h1>\n                                <p className=\"text-gray-400\">Self-improving AI-powered trading</p>\n                            </div>\n                        </div>\n                        <div className=\"flex gap-4\">\n                            <button\n                                onClick={() => setActiveView('dashboard')}\n                                className={`px-4 py-2 rounded ${activeView === 'dashboard' ? 'bg-blue-600' : 'bg-gray-700'}`}\n                            >\n                                Dashboard\n                            </button>\n                            <button\n                                onClick={() => setActiveView('recommendations')}\n                                className={`px-4 py-2 rounded ${activeView === 'recommendations' ? 'bg-blue-600' : 'bg-gray-700'}`}\n                            >\n                                AI Recommendations\n                            </button>\n                            <button\n                                onClick={() => setActiveView('record')}\n                                className={`px-4 py-2 rounded ${activeView === 'record' ? 'bg-blue-600' : 'bg-gray-700'}`}\n                            >\n                                Record Trade\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Performance Metrics */}\n                {performance && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                        <div className=\"bg-gradient-to-br from-blue-900 to-blue-800 p-4 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                                <Brain className=\"w-6 h-6 text-blue-300\" />\n                                <span className=\"text-xs text-blue-300\">ML MODEL</span>\n                            </div>\n                            <div className=\"text-2xl font-bold\">{(performance.modelAccuracy * 100).toFixed(1)}%</div>\n                            <div className=\"text-sm text-blue-300\">Accuracy</div>\n                            <div className=\"text-xs text-gray-400 mt-1\">\n                                {performance.totalTrades} trades analyzed\n                            </div>\n                        </div>\n\n                        <div className=\"bg-gradient-to-br from-green-900 to-green-800 p-4 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                                <TrendingUp className=\"w-6 h-6 text-green-300\" />\n                                <span className=\"text-xs text-green-300\">WIN RATE</span>\n                            </div>\n                            <div className=\"text-2xl font-bold\">{(performance.winRate * 100).toFixed(1)}%</div>\n                            <div className=\"text-sm text-green-300\">Success Rate</div>\n                            <div className=\"text-xs text-gray-400 mt-1\">\n                                Avg Return: {performance.avgReturn?.toFixed(2)}%\n                            </div>\n                        </div>\n\n                        <div className=\"bg-gradient-to-br from-purple-900 to-purple-800 p-4 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                                <Shield className=\"w-6 h-6 text-purple-300\" />\n                                <span className=\"text-xs text-purple-300\">RISK METRICS</span>\n                            </div>\n                            <div className=\"text-2xl font-bold\">{performance.sharpeRatio?.toFixed(2)}</div>\n                            <div className=\"text-sm text-purple-300\">Sharpe Ratio</div>\n                            <div className=\"text-xs text-gray-400 mt-1\">\n                                Max DD: {(performance.maxDrawdown * 100).toFixed(1)}%\n                            </div>\n                        </div>\n\n                        <div className=\"bg-gradient-to-br from-yellow-900 to-yellow-800 p-4 rounded-lg\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                                <Zap className=\"w-6 h-6 text-yellow-300\" />\n                                <span className=\"text-xs text-yellow-300\">PROFIT FACTOR</span>\n                            </div>\n                            <div className=\"text-2xl font-bold\">{performance.profitFactor?.toFixed(2)}</div>\n                            <div className=\"text-sm text-yellow-300\">Risk/Reward</div>\n                            <div className=\"text-xs text-gray-400 mt-1\">\n                                {performance.activeTrades?.length || 0} active trades\n                            </div>\n                        </div>\n                    </div>\n                )}\n                \n                {/* Real-Time Market Data */}\n                {marketData && Object.keys(marketData).length > 0 && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-6\">\n                        {['SPY', 'QQQ', 'AAPL', 'NVDA', 'TSLA'].map(symbol => {\n                            const data = marketData[symbol];\n                            if (!data) return null;\n                            \n                            const price = data.currentPrice || data.price || 0;\n                            const change = data.changePercent || data.change || 0;\n                            const volume = data.volume || 0;\n                            const isPositive = change > 0;\n                            \n                            return (\n                                <div key={symbol} className=\"bg-gray-800 p-4 rounded-lg\">\n                                    <div className=\"flex justify-between items-start mb-2\">\n                                        <span className=\"text-lg font-bold\">{symbol}</span>\n                                        <span className={`text-xs px-2 py-1 rounded ${\n                                            isPositive ? 'bg-green-900 text-green-400' : 'bg-red-900 text-red-400'\n                                        }`}>\n                                            {isPositive ? '+' : ''}{Math.abs(change).toFixed(2)}%\n                                        </span>\n                                    </div>\n                                    <div className=\"text-2xl font-bold\">\n                                        ${price > 0 ? price.toFixed(2) : '---'}\n                                    </div>\n                                    <div className=\"text-xs text-gray-400 mt-1\">\n                                        Vol: {volume > 0 ? (volume / 1000000).toFixed(1) + 'M' : 'N/A'}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n\n                {/* Main Content */}\n                {activeView === 'dashboard' && (\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        {/* Top Strategies */}\n                        <div className=\"bg-gray-800 rounded-lg p-6\">\n                            <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n                                <Award className=\"w-5 h-5 text-yellow-500\" />\n                                Top Performing Strategies\n                            </h2>\n                            <div className=\"space-y-3\">\n                                {performance?.strategies?.slice(0, 5).map((strategy, idx) => (\n                                    <div key={idx} className=\"bg-gray-700 rounded p-3\">\n                                        <div className=\"flex justify-between items-start\">\n                                            <div>\n                                                <div className=\"font-semibold\">{strategy.name}</div>\n                                                <div className=\"text-sm text-gray-400\">\n                                                    {strategy.trades} trades\n                                                </div>\n                                            </div>\n                                            <div className=\"text-right\">\n                                                <div className=\"text-green-400 font-bold\">\n                                                    {(strategy.winRate * 100).toFixed(1)}%\n                                                </div>\n                                                <div className=\"text-xs text-gray-400\">\n                                                    Win Rate\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"mt-2 flex justify-between text-xs\">\n                                            <span>Avg Return: {strategy.avgReturn?.toFixed(2)}%</span>\n                                            <span>Sharpe: {strategy.sharpeRatio?.toFixed(2)}</span>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n\n                        {/* Top Patterns */}\n                        <div className=\"bg-gray-800 rounded-lg p-6\">\n                            <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n                                <BarChart3 className=\"w-5 h-5 text-purple-500\" />\n                                Most Successful Patterns\n                            </h2>\n                            <div className=\"space-y-3\">\n                                {performance?.patterns?.slice(0, 5).map((pattern, idx) => (\n                                    <div key={idx} className=\"bg-gray-700 rounded p-3\">\n                                        <div className=\"flex justify-between items-start\">\n                                            <div>\n                                                <div className=\"font-semibold capitalize\">\n                                                    {pattern.name.replace(/_/g, ' ')}\n                                                </div>\n                                                <div className=\"text-sm text-gray-400\">\n                                                    {pattern.occurrences} occurrences\n                                                </div>\n                                            </div>\n                                            <div className=\"text-right\">\n                                                <div className=\"text-blue-400 font-bold\">\n                                                    {(pattern.successRate * 100).toFixed(1)}%\n                                                </div>\n                                                <div className=\"text-xs text-gray-400\">\n                                                    Success Rate\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"mt-2 text-xs text-gray-400\">\n                                            Total Return: {pattern.totalReturn?.toFixed(2)}%\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {activeView === 'recommendations' && (\n                    <div className=\"space-y-6\">\n                        <div className=\"bg-gray-800 rounded-lg p-6\">\n                            <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n                                <Sparkles className=\"w-5 h-5 text-yellow-500\" />\n                                AI-Generated Trading Recommendations\n                            </h2>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                                {recommendations.map((rec, idx) => (\n                                    <div key={idx} className=\"bg-gray-700 rounded-lg p-4\">\n                                        <div className=\"flex justify-between items-start mb-3\">\n                                            <div>\n                                                <div className=\"text-xl font-bold\">{rec.symbol}</div>\n                                                <div className={`text-sm font-semibold ${\n                                                    rec.action.includes('buy') ? 'text-green-400' : \n                                                    rec.action.includes('sell') ? 'text-red-400' : \n                                                    'text-yellow-400'\n                                                }`}>\n                                                    {rec.action.toUpperCase()}\n                                                </div>\n                                            </div>\n                                            <div className=\"text-right\">\n                                                <div className=\"text-lg font-bold\">\n                                                    {(rec.confidence * 100).toFixed(0)}%\n                                                </div>\n                                                <div className=\"text-xs text-gray-400\">Confidence</div>\n                                            </div>\n                                        </div>\n                                        \n                                        <div className=\"space-y-2 text-sm\">\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-gray-400\">Expected Return:</span>\n                                                <span className={rec.expectedReturn > 0 ? 'text-green-400' : 'text-red-400'}>\n                                                    {rec.expectedReturn.toFixed(2)}%\n                                                </span>\n                                            </div>\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-gray-400\">Risk Level:</span>\n                                                <span className={\n                                                    rec.risk < 0.3 ? 'text-green-400' :\n                                                    rec.risk < 0.6 ? 'text-yellow-400' :\n                                                    'text-red-400'\n                                                }>\n                                                    {(rec.risk * 100).toFixed(0)}%\n                                                </span>\n                                            </div>\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-gray-400\">Pattern:</span>\n                                                <span className=\"text-blue-400 capitalize\">\n                                                    {rec.pattern.replace(/_/g, ' ')}\n                                                </span>\n                                            </div>\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-gray-400\">Entry:</span>\n                                                <span>${rec.entryPrice.toFixed(2)}</span>\n                                            </div>\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-gray-400\">Stop Loss:</span>\n                                                <span className=\"text-red-400\">${rec.stopLoss.toFixed(2)}</span>\n                                            </div>\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-gray-400\">Take Profit:</span>\n                                                <span className=\"text-green-400\">${rec.takeProfit.toFixed(2)}</span>\n                                            </div>\n                                        </div>\n                                        \n                                        <div className=\"mt-3 p-2 bg-gray-800 rounded text-xs text-gray-300\">\n                                            {rec.reasoning}\n                                        </div>\n                                        \n                                        <button className=\"mt-3 w-full bg-blue-600 hover:bg-blue-700 py-2 rounded text-sm font-semibold transition-colors\">\n                                            Execute Trade\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {activeView === 'record' && (\n                    <div className=\"bg-gray-800 rounded-lg p-6\">\n                        <h2 className=\"text-xl font-bold mb-4\">Record Trade for ML Training</h2>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 max-w-2xl\">\n                            <div>\n                                <label className=\"block text-sm text-gray-400 mb-1\">Symbol</label>\n                                <input\n                                    type=\"text\"\n                                    value={tradeForm.symbol}\n                                    onChange={(e) => setTradeForm({...tradeForm, symbol: e.target.value.toUpperCase()})}\n                                    className=\"w-full bg-gray-700 rounded px-3 py-2 text-white\"\n                                    placeholder=\"AAPL\"\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm text-gray-400 mb-1\">Action</label>\n                                <select\n                                    value={tradeForm.action}\n                                    onChange={(e) => setTradeForm({...tradeForm, action: e.target.value})}\n                                    className=\"w-full bg-gray-700 rounded px-3 py-2 text-white\"\n                                >\n                                    <option value=\"buy\">Buy</option>\n                                    <option value=\"sell\">Sell</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm text-gray-400 mb-1\">Price</label>\n                                <input\n                                    type=\"number\"\n                                    value={tradeForm.price}\n                                    onChange={(e) => setTradeForm({...tradeForm, price: e.target.value})}\n                                    className=\"w-full bg-gray-700 rounded px-3 py-2 text-white\"\n                                    placeholder=\"150.00\"\n                                    step=\"0.01\"\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm text-gray-400 mb-1\">Quantity</label>\n                                <input\n                                    type=\"number\"\n                                    value={tradeForm.quantity}\n                                    onChange={(e) => setTradeForm({...tradeForm, quantity: e.target.value})}\n                                    className=\"w-full bg-gray-700 rounded px-3 py-2 text-white\"\n                                    placeholder=\"100\"\n                                />\n                            </div>\n                            <div className=\"md:col-span-2\">\n                                <label className=\"block text-sm text-gray-400 mb-1\">Strategy</label>\n                                <input\n                                    type=\"text\"\n                                    value={tradeForm.strategy}\n                                    onChange={(e) => setTradeForm({...tradeForm, strategy: e.target.value})}\n                                    className=\"w-full bg-gray-700 rounded px-3 py-2 text-white\"\n                                    placeholder=\"e.g., momentum, mean_reversion, breakout\"\n                                />\n                            </div>\n                            <div className=\"md:col-span-2\">\n                                <button\n                                    onClick={handleRecordTrade}\n                                    className=\"bg-blue-600 hover:bg-blue-700 px-6 py-2 rounded font-semibold transition-colors\"\n                                >\n                                    Record Trade\n                                </button>\n                            </div>\n                        </div>\n\n                        {/* Active Trades */}\n                        {performance?.activeTrades?.length > 0 && (\n                            <div className=\"mt-8\">\n                                <h3 className=\"text-lg font-bold mb-4\">Active Trades</h3>\n                                <div className=\"space-y-2\">\n                                    {performance.activeTrades.map(trade => (\n                                        <div key={trade.id} className=\"bg-gray-700 rounded p-3 flex justify-between items-center\">\n                                            <div>\n                                                <span className=\"font-semibold\">{trade.symbol}</span>\n                                                <span className=\"ml-2 text-sm text-gray-400\">\n                                                    {trade.action} @ ${trade.price}\n                                                </span>\n                                            </div>\n                                            <button\n                                                onClick={() => {\n                                                    const exitPrice = prompt('Enter exit price:');\n                                                    if (exitPrice) {\n                                                        handleCloseTrade(trade.id, parseFloat(exitPrice));\n                                                    }\n                                                }}\n                                                className=\"bg-red-600 hover:bg-red-700 px-3 py-1 rounded text-sm\"\n                                            >\n                                                Close Trade\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MLTradingDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}